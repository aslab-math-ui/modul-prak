{
  "hash": "db1750df9d4cfb8f97a33435590ad16f",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"🐙 Panduan Git di RStudio & VSCode\"\ndescription: \"Langkah demi langkah penggunaan Git lewat terminal RStudio dan terminal VSCode.\"\nkeywords: [git rstudio windows, git vscode windows, source control rstudio, git terminal vs code, panduan git asisten lab]\nformat:\n  html:\n    toc: true\n    toc-title: \"Daftar Isi\"\n    toc-location: left\n    toc-depth: 3\n    number-sections: true\n    theme: cosmo\n    code-fold: true\n---\n\n\n# 🔧 Persiapan Awalan\n\nSebelum masuk ke IDE, pastikan:\n\n- **Git** sudah terpasang (`Git Bash`, atau installer resmi di Windows)  \n- **VSCode** terinstal: https://code.visualstudio.com/  \n- **RStudio** terinstal: https://posit.co/download/rstudio  \n\nJika belum, ikuti panduan instalasi Git Bash di Windows pada modul [sebelumnya](./git-bash.qmd).\n\n---\n\n# 1️⃣ Git di RStudio (Windows + CMD)\n\nRStudio di Windows menggunakan **Command Prompt** (`cmd.exe`) atau **PowerShell**. Berikut cara mengaktifkan dan menggunakannya untuk Git:\n\n## 1.1. Aktifkan Git di RStudio\n\n1. Buka **Tools → Global Options → Git/SVN**  \n2. Centang **Enable version control interface for RStudio projects**  \n3. Pastikan path ke `git.exe` benar, misal:  \n\n```{bash filename=terminal}\n   C:/Program Files/Git/cmd/git.exe\n```  \n\n4. Klik **Apply** dan **OK**.  \n5. Restart RStudio.\n\n## 1.2. Membuat & Mengelola Proyek Git\n\n1. **File → New Project → Version Control → Git**  \n2. Masukkan URL repo (GitHub/GitLab), contohnya:  \n   ```\n   https://github.com/username/repo-praktikum.git\n   ```  \n3. Pilih folder lokal, klik **Create Project**.\n\n## 1.3. Workflow Dasar di RStudio\n\nDi tab **Git** (kanan atas):\n\n```bash\n# di panel terminal RStudio (Cmd/Powershell)\ngit status\ngit add nama_file.qmd\ngit commit -m \"Menambahkan panduan\"\ngit push origin main\n```\n\n- Tombol **Commit** → centang file → isi pesan → **Commit**, lalu **Push**.  \n- Gunakan **Pull** sebelum mulai kerja untuk sinkronisasi.\n\n> 🔗 Referensi resmi RStudio Git setup: https://r-bio.github.io/git-installation/\n\n---\n\n# 2️⃣ Git di VSCode (Windows + Integrated Terminal)\n\nVSCode memiliki integrasi Git yang powerful dan terminal bawaan (PowerShell by default).\n\n## 2.1. Buka & Clone Repo\n\n1. Jalankan VSCode  \n2. Tekan `Ctrl+Shift+P` → ketik **Git: Clone**  \n3. Tempel URL repo, misal:  \n   ```\n   https://github.com/username/repo-praktikum.git\n   ```  \n4. Pilih folder lokal, tunggu proses clone selesai.\n\n## 2.2. Integrated Terminal\n\n- Buka terminal dengan `Ctrl+\\`` (backtick)  \n- Default menggunakan PowerShell. Jika ingin Bash:  \n  - Tekan tombol ⌄ di pojok kanan terminal → pilih **Select Default Profile → Git Bash**  \n  - Restart terminal.\n\n## 2.3. Workflow Dasar di VSCode\n\n### A. Menggunakan GUI Source Control\n\n1. Klik icon **Source Control** (ikon percabangan)  \n2. Centang perubahan → tulis pesan commit → **✔️ Commit**  \n3. Klik **… → Push** atau otomatis muncul tombol **Push**.\n\n### B. Menggunakan Terminal\n\n```bash\ngit status\ngit add .\ngit commit -m \"Memperbarui modul Quarto\"\ngit pull    # tarik perubahan terbaru\ngit push    # kirim commit lokal\n```\n\n> 🔗 Tutorial resmi Git di VSCode: https://code.visualstudio.com/docs/sourcecontrol/intro-to-git\n\n---\n\n# 💡 Tips Retensi & Konsistensi\n\n- **Satu perintah berlaku di semua OS**: `ls`, `cd`, `git status`, dll.  \n- **Biasakan GUI + Terminal**: GUI memudahkan pemula, terminal menguatkan ingatan sintaks.  \n- **Selalu `pull` sebelum `push`**: Hindari konflik merge.  \n- **Gunakan branch**: untuk fitur baru (`git checkout -b fitur-XYZ`).\n\n---\n\nSemoga panduan ini membantu kamu menguasai Git secara mulus di kedua IDE. Setelah nyaman, lanjut ke topik **Continuous Integration (CI)** atau **best practices branching**!\n\n",
    "supporting": [
      "git-vscode-rstudio_files"
    ],
    "filters": [],
    "includes": {}
  }
}