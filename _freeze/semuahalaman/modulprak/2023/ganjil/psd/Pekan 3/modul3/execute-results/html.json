{
  "hash": "e05b845b68ac9b12909a6d825c2bc0eb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modul 3 Praktikum PSD 2023/2024 Semester Ganjil\"\npage-navigation: true\nformat: html\n---\n\n\n\nKembali ke [Pengantar Sains Data](../psd2023.qmd)\n\nVersi *file* `.R` dari modul ini bisa diunduh: [Modul 3 (REV).R](./Modul%203%20(REV).R)\n\n```\nlibrary(Rlab)\n```\n\n# Distribusi Kontinu\n\n## Distribusi Normal\n\nDigunakan saat $n >= 30$\n\n### pdf\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(2.7,\n      mean = 2,\n      sd = 5)\n```\n:::\n\n\n\npdf normal standar\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndnorm(2.7,\n      mean = 0,\n      sd = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx3 <- seq(-4, 4, length = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x3,\n     dnorm(x3, mean = 0, sd = 1),\n     type = 'o')\n```\n:::\n\n\n\n### cdf\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnorm(1.96,\n      mean = 0,\n      sd = 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(x3,\n     pnorm(x3, mean = 0, sd = 1),\n     type = 'o')\n```\n:::\n\n\n\n### inverse CDF\n\nkalo cdf kan inputnya x outputnya probabilitas\n\ngimana kalo mau inputnya probabilitas outputnya x? pake qnorm\n\nPr(X <= x) = 1.96 (gimana cara cari x nya?)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqnorm(0.975,\n      mean = 0,\n      sd = 1)\n```\n:::\n\n\n\nbangkitkan data random\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(101)\nn <- 100\nrandom_normal <- rnorm(n, mean = 0, sd = 1)\nrandom_normal2 <- rnorm(n, mean = 10, sd = 8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1,2))\nplot(density(random_normal), main = \"Mean 0 Sd 1\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(random_normal2), main = \"Mean 10 Sd 8\")\npar(mfrow = c(1,1))\n```\n:::\n\n\n\n# Distribusi *Sampling*\n\n## CLT *(Central Limit Theorem)*\n\nCENTRAL LIMIT THEOREM : Semakin besar sampel yang diambil, bisa didekatkan ke dist. normal\n\nSampling Distribution (Contoh: akan dilakukan sampling dari distribusi uniform)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunif <- c(1:8)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunif\n```\n:::\n\n\n\nLihat sebarannya\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(unif)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(unif)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(unif, main = \"Uniform Distribution\", xlab = \" \")\n```\n:::\n\n\n\nAmbil berbagai ukuran sampel, bandingkan\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(211)\n```\n:::\n\n\n\nSample size of 3, 1000 kali percobaan\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_means <- c( )\nfor(i in 1:1000){\n  sample_means[i] <- mean(sample(8, 3, replace = TRUE))\n}\nhist(sample_means, xlim = c(0,8), main = \"Sample Size of 3\", xlab = \"Sample Means\")\n```\n:::\n\n\n\nSample size of 10, 1000 kali percobaan\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_means <- c( )\nfor(i in 1:1000){\n  sample_means[i] <- mean(sample(8, 10, replace = TRUE))\n}\nhist(sample_means, xlim = c(0,8), main = \"Sample Size of 10\", xlab = \"Sample Means\")\n```\n:::\n\n\n\nSample size of 50\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsample_means <- c( )\nfor(i in 1:1000){\n  sample_means[i] <- mean(sample(8, 50, replace = TRUE))\n}\nhist(sample_means, xlim = c(0,8), main = \"Sample Size of 50\", xlab = \"Sample Means\")\n```\n:::\n\n\n\nApa kesimpulannya? (Semakin besar ukuran sampel, semakin berbentuk lonceng -> dist.normal)\n\n## Penerapan CLT\n\ntransformasi random_normal2 menjadi normal standar (berlaku untuk distribusi kontinu apapun -> sampling dist.)\n\ngunakan CLT -> scale\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow = c(1,2))\nplot(density(random_normal2), main = \"Sebelum\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(density(scale(random_normal2)), main = \"Sesudah\")\npar(mfrow = c(1,1))\n```\n:::\n\n\n\n# Distribusi Kontinu (lanjutan)\n\n## Distribusi T : Digunakan saat n<30 dan variansi tidak diketahui\n\n### pdf\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndt(x = 0.5, df = 14)\n```\n:::\n\n\n\n### cdf\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npt(0.025, df = 14) \n```\n:::\n\n\n\nPr(T<t)=0.05 (alpha) -> nyari t nya (t-table)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqt(.95, df = 20)\n```\n:::\n\n\n\n### generating random data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(121)\nn <- 100\nrandomt <- rt(n, df = 20)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(randomt, breaks=50, xlim = c(-6, 4))\n```\n:::\n\n\n\n## Distribusi lain\n\nuntuk distribusi lain, intinya tetap sama hanya sesuaikan parameternya saja\n\nformat:\n\n- pdf -> d+nama distribusi()\n\n    misal pdf poisson berarti `dpois()`\n\n- cdf poisson: `ppois()`\n\n- data random dari distribusi poisson `rpois()`\n\nselengkapnya bisa cek di dokumentasi \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n?Distributions\n```\n:::\n",
    "supporting": [
      "modul3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}