{
  "hash": "b0dfeccf72d3924c7a5e37d562944187",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multiple linear model\"\nsubtitle: \"Multiple linear model\"\nimage: static\\bg_modul1.jpg\ndescription: \"Offline di Departemen Matematika\"\ndate: 10/28/2024\npage-navigation: true\nformat: html\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\nPengantar Model Regresi Linier Berganda Model regresi linier berganda\ndigunakan untuk memprediksi nilai suatu variabel tergantung\n\n$$Y = \\beta_0 + \\beta_1 X_1 + \\beta_2 X_2 + \\dots + \\beta_n X_n + \\epsilon$$\n\nDi mana:\n\n$ùõΩ_0$ : adalah intersep atau titik potong,\n\n$ùõΩ_1,ùõΩ_2,\\dots,ùõΩ_ùëù$ adalah koefisien dari setiap variabel independen,\ndan $ùúñ$ adalah error atau residual.\n\nAsumsi Model Model regresi linier berganda membutuhkan beberapa asumsi\nuntuk menghasilkan estimasi yang valid:\n\n-   Linearitas: Hubungan antara variabel dependen dan independen harus\n    linier. Independensi: Residual harus independen satu sama lain.\n\n-   Homoskedastisitas: Variansi residual harus konstan di seluruh\n    pengamatan. Normalitas: Residual harus terdistribusi normal.\n\n# Tipe-Tipe Regresi Linear di R\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\ndata(\"Salaries\")\nhead(Salaries)\nstr(Salaries)\n```\n:::\n\n\n\n1.  Model tanpa Intercept\n\n    Pada bagian ini , model dibuat tanpa menggunakan / menentukan\n    koefisien intercept.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_0 <- lm(salary~ 0+yrs.since.phd, data = Salaries) \nsummary(model_0)\n```\n:::\n\n\n\n2.  Model Linear Biasa\n\n    Pada bagian ini , model dibuat hanya dengan menggunakan 1 variabel\n    saja.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_1var <- lm(salary~yrs.since.phd, data = Salaries) \nsummary(model_1var)\n```\n:::\n\n\n\n3.  Model Linear Berganda\n\n    Pada bagian ini , model dibuat dengan minimal 2 variabel atau lebih.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_2var <- lm(salary~yrs.since.phd + yrs.service, data = Salaries) \nsummary(model_2var)\n```\n:::\n\n\n\n4.  Model Linear dengan prediktor Kategorik\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- Salaries\ndf$Male <- ifelse(df$sex == 'Male', 1, 0) \nhead(df)\n\nmodel1 <- lm(salary~yrs.since.phd + yrs.service + Male, data=df)\nsummary(model1)\n```\n:::\n\n\n\nPada bagian ini, nilai variabel `sex` didefinisikan sebagai nilai\nnumerik, di mana kategori `Male` diubah menjadi 1 dan kategori `Female`\ndiubah menjadi 0.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fastDummies)\ndataf <- dummy_cols(Salaries,select_columns ='sex')\nhead(dataf)\n\nmodel2<- lm(salary~yrs.since.phd + yrs.service + sex_Male, data=dataf)\nsummary(model2)\n```\n:::\n\n\n\nPada bagian ini, nilai variabel `sex` didefinisikan menjadi dummy\nvariabel , di mana kategori `Male` dan `Female` diubah menjadi kolom\ndengan nilai yang tepat.\n\n| Sex    | Sex_Male | Sex_Female |\n|--------|----------|------------|\n| Male   | 1        | 0          |\n| Female | 0        | 1          |\n| Female | 0        | 1          |\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#tanpa buat dummy variabel\nmodel3 <-lm(salary~yrs.since.phd + yrs.service + sex, data=Salaries)\nsummary(model3)\n```\n:::\n\n\n\nPada bagian ini, nilai variabel `sex` akan langsung digunakan secara\notomatis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#ganti base level\nSalaries$sex <- relevel(Salaries$sex, ref='Male')\nmodel4 <-lm(salary~yrs.since.phd + yrs.service + relevel(sex, ref='Male'), data=Salaries)\nsummary(model4)\n```\n:::\n\n\n\n# Regresi Linear Polinomial\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatareg <- read.csv(\"https://raw.githubusercontent.com/aslab-math-ui/modul-prak/refs/heads/main/semuahalaman/modulprak/2024/ganjil/molin/datasets/datareg.csv\")\nhead(datareg)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(datareg$gaji, datareg$kesenangan)\n```\n:::\n\n\n\n1.  Model Linear (Orde 1)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Model linear (orde 1)\nlinearModel <- lm(kesenangan ~ gaji, data=datareg)\nsummary(linearModel)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Model Kuadratik (orde 2)\ndatareg$gajikuadrat <- datareg$gaji^2\nhead(datareg)\n\n\nmodelkuadratik <- lm(kesenangan~gaji + gajikuadrat, data=datareg)\nmodelkuadratik <- lm(kesenangan~gaji + I(gaji^2), data=datareg)\nsummary(modelkuadratik)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Model Kubik (orde 3)\ndatareg$gajikubik <- datareg$gaji^3\nmodelkubik <- lm(kesenangan~gaji + gajikuadrat + gajikubik, data=datareg)\nmodelkubik <- lm(kesenangan~gaji + I(gaji^2) + I(gaji^3), data=datareg)\nsummary(modelkubik)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Compare model kuadratik sama kubik\nanova(modelkuadratik,modelkubik)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot regresi \nplot(datareg$gaji, datareg$kesenangan)\n#Mengeluarkan nilai gaji\nnilaigaji <- seq(0, 60, 0.1)\n#Mengeluarkan nilai prediksi dari model kuadratik\npredkesenangan <- predict(modelkuadratik,list(gaji=nilaigaji, gajikuadrat=nilaigaji^2))\n#Mengeluarkan Plot dengan garis\nlines(nilaigaji, predkesenangan, col='red')\n```\n:::\n\n\n\nModel Interaksi Interaksi memungkinkan kita untuk menguji apakah efek\ndari satu variabel independen pada $ùëå$ dipengaruhi oleh variabel\nindependen lain. Model interaksi dapat dituliskan sebagai:\n\n$$ùëå=ùõΩ_0 +ùõΩ_1 ùëã_1 + ùõΩ_2ùëã_2 +ùõΩ_3(ùëã_1√óùëã_2)+ùúñ$$\n\nKoefisien $ùõΩ_3$ menunjukkan efek interaksi antara $ùëã_1$ dan $ùëã_2$ .\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnilai_UTS <- read.csv(\"https://raw.githubusercontent.com/aslab-math-ui/modul-prak/refs/heads/main/semuahalaman/modulprak/2024/ganjil/molin/datasets/nilai_UTS.csv\")\nhead(nilai_UTS)\nstr(nilai_UTS)\n\nGenderMale <- nilai_UTS[which(nilai_UTS$JenisKelamin==\"Male\"),]\nGenderFemale <- nilai_UTS[which(nilai_UTS$JenisKelamin==\"Female\"),]\n\nmodelMale <- lm(nilai_UTS ~ IQ, data = GenderMale)\nmodelFemale <- lm(nilai_UTS ~ IQ, data = GenderFemale)\n\n#Ngeluarin plot dengan garis \nplot(nilai_UTS$IQ, nilai_UTS$nilai_UTS)\nlines(GenderMale$IQ, predict(modelMale), col=\"red\",\n      lty = 1 , lwd = 2)\nlines(GenderFemale$IQ, predict(modelFemale), col=\"blue\",\n      lty = 2 , lwd = 2)\nlegend(\"topleft\", legend=c('Male','Female'), col=c('red','blue'),\n       lty = c(1,2), lwd=c(2,2))\n```\n:::\n\n\n\nTransformasi Variabel Jika asumsi linearitas atau homoskedastisitas\ntidak terpenuhi, transformasi variabel dapat membantu. Contoh\ntransformasi yang sering digunakan meliputi:\n\n-   **Logaritma** untuk mengatasi ketidakseimbangan skala.\n-   **Kuadrat atau akar** untuk mengurangi heteroskedastisitas.\n\nPengujian Model Dalam mengevaluasi model, kita biasanya menggunakan\nbeberapa metrik:\n\n-   **R-squared (** $ùëÖ^2$ ): Mengukur proporsi variabilitas $ùëå$ yang\n    dapat dijelaskan oleh model.\n\n-   **Adjusted** $ùëÖ^2$ : Mengoreksi nilai $ùëÖ^2$ dengan mempertimbangkan\n    jumlah variabel independen.\n\n-   **F-Test**: Untuk menguji apakah setidaknya satu dari variabel\n    independen berkontribusi signifikan terhadap prediksi $Y$.\n\n### Open Source Exploratory Data \n\ngunakan rawgithubusercontent untuk attrive data langsung secara online.\n\n#### **1. Our World in Data -** <https://github.com/owid>\n\nPoverty, disease, hunger, climate change, war, existential risks, and\ninequality: the world faces many great and terrifying problems. It is\nthese large problems that our work at Our World in Data focuses on.\n\n#### 2. [covid](https://github.com/aatishb/covid) - <https://github.com/aatishb/covid>\n\nThe purpose of [this\nnotebook](https://github.com/aatishb/covid/blob/master/curvefit.ipynb)\nis to infer the rate at which confirmed cases of COVID-19 are growing\n(or were growing) in various countries.\n\nThe notebook pulls data from the John Hopkins [Data\nRepository](https://github.com/CSSEGISandData/COVID-19) of global\nCoronavirus COVID-19 cases, and then does the following things:\n\n-   List total number of confirmed cases (in countries with at least 100\n    cases)\n\n-   Attempt to fit the time series of confirmed cases in these countries\n    to both an exponential and a logistic function\n\n-   Use these curve fits to infer doubling times (i.e., time for the\n    number of confirmed cases to double)\n\n-   If the curve fit was successful, summarize doubling times for each\n    country\n\n#### 3. Center for Systems Science and Engineering - <https://github.com/CSSEGISandData> - <https://systems.jhu.edu/research/public-health/ncov>\n\nThis is the data repository for the 2019 Novel Coronavirus Visual\nDashboard operated by the Johns Hopkins University Center for Systems\nScience and Engineering (JHU CSSE). Also, Supported by ESRI Living Atlas\nTeam and the Johns Hopkins University Applied Physics Lab (JHU APL).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}