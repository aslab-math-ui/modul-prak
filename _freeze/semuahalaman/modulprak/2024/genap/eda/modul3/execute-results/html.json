{
  "hash": "c820150230d94164be712d95a6e11b58",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Pertemuan 3 : Simple Data Visualization (matplotlib)\"\nimage: static\\images\\eda_py_img0.png\ndescription: \"Data visualization in python using matplotlib (pyplot)\"\ndate: 04/23/2024\npage-navigation: true\njupyter: python3\nformat: html\n---\n\n\n\n\nKembali ke [EDA](./eda2024genap.qmd)\n\n# Matplotlib (Pyplot)\n\n<div style='text-align: justify;'>\nMatplotlib adalah library yang digunakan untuk visualisasi data. Hasil visualisasi data matplotllib menyerupai hasil visualisasi pada bahasa pemrograman matlab. Library ini bukanlah cara yang paling mudah untuk menghasilkan visualisasi data, tetapi visualisasi yang dihasilkan fleksibel dan dapat digunakan untuk banyak sekali kasus.\n</div>\n\n___\n\n<div style='text-align: justify;'>\n[Download dataset](https://drive.google.com/drive/folders/1Rz53jj0SLIB0lF6MEwY34lx8oBkEyy8-?usp=sharing)\n</div>\n\n::: {#27a58863 .cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n\n# Import Dataset\ndf = pd.read_csv('https://raw.githubusercontent.com/farhanage/dataset-for-study/main/insurance.csv')\n\n# Cek 5 observasi pertama\ndf.head()\n```\n:::\n\n\n::: {#f6e902eb .cell execution_count=2}\n``` {.python .cell-code}\n# melihat informasi mengenai tiap variabel\ndf.info()\n```\n:::\n\n\n::: {#6e21d127 .cell execution_count=3}\n``` {.python .cell-code}\n# statistik deskritif semua variabel numerik\ndf.describe()\n```\n:::\n\n\n## Box Plot\n\n::: {#4a0dd513 .cell execution_count=4}\n``` {.python .cell-code}\n# Box Plot variabel `age`\nplt.boxplot(x='age', data=df)\n\n# Menambahkan Judul Plot\nplt.title(\"Box Plot\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('Age')\nplt.ylabel('Value')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n::: {#eefcbcd3 .cell execution_count=5}\n``` {.python .cell-code}\n# Box Plot variabel `bmi`\nplt.boxplot(x='bmi', data=df)\n\n# Menambahkan Judul Plot\nplt.title(\"Box Plot\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('bmi')\nplt.ylabel('Value')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n:::{.callout-note}\n\n<div style='text-align: justify;'>\nSeperti halnya penggunaan syntax `?` pada bahasa pemrograman R, kita dapat mengakses dokumentasi suatu fungsi dalam suatu modul pada python dengan menggunakan function `help()`\n</div>\n\n::: {#f4a1e23a .cell execution_count=6}\n``` {.python .cell-code}\n# Melihat dokumentasi mengenai function plt.boxplot()\nhelp(plt.boxplot)\n```\n:::\n\n\n:::\n\n## Histogram\n\n::: {#0b70084b .cell execution_count=7}\n``` {.python .cell-code}\n# Histogram variabel `bmi`\nplt.hist(x='bmi', data=df)\n\n# Menambahkan Judul Plot\nplt.title(\"Histogram\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('bmi')\nplt.ylabel('Count')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n## Bar Chart\n\n::: {#c9a1e20d .cell execution_count=8}\n``` {.python .cell-code}\n# Hitung banyaknya responden dari masing-masing gender\ndf['sex'].value_counts()\n```\n:::\n\n\n::: {#5ccf737f .cell execution_count=9}\n``` {.python .cell-code}\n# Bar chart jumlah tiap jenis kelamin\ndf['sex'].value_counts().plot(kind='bar')\n\n# Menambahkan Judul Plot\nplt.title(\"Bar Chart\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('sex')\nplt.ylabel('count')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n## Horizontal Bar Chart\n\n::: {#3c72687a .cell execution_count=10}\n``` {.python .cell-code}\n# Horizontal Bar chart jumlah tiap jenis kelamin\ndf['sex'].value_counts().plot(kind='barh')\n\n# Menambahkan Judul Plot\nplt.title(\"Bar Chart\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('count')\nplt.ylabel('sex')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n## Pie Chart\n\n::: {#3968bd71 .cell execution_count=11}\n``` {.python .cell-code}\n# Pie chart persentase sebaran region seluruh responden\ndf['region'].value_counts().plot(kind='pie', autopct='%1.1f%%')\n\n# Menambahkan Judul Plot\nplt.title(\"Pie Chart\")\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n## Scatter Plot\n\n::: {#5474c7e5 .cell execution_count=12}\n``` {.python .cell-code}\n# Scatter plot variabel `age` dan `charges`\ndf.plot(kind='scatter', x='age', y='charges')\n\n# Menambahkan Judul Plot\nplt.title(\"Scatter Plot `Age` vs `Charges`\")\n \n# Menambahkan label sumbu X dan Y\nplt.xlabel('Age')\nplt.ylabel('Charges')\n\n# Menunjukkan plot\nplt.show()\n```\n:::\n\n\n___\n\n<div style='text-align: justify;'>\nUntuk plot lainnya, silakan telusuri dokumentasi dari library matplotlib yang dapat diakses pada link berikut : [Dokumentasi matplotlib.pyplot](https://matplotlib.org/stable/api/pyplot_summary.html)\n</div>\n\n# Subplots\n\n## Figure and Axes\n<div style='text-align: justify;'>\n\nPembuatan suatu plot menggunakan library matplotlib akan menghasilkan suatu ***figure*** yang memiliki beberapa komponen di dalamnya.\n\n![](static\\images\\anatomy of figures.png)\n\nBerikut cara membuat suatu figure menggunakan matplotlib\n</div>\n\n::: {#93ba304c .cell execution_count=13}\n``` {.python .cell-code}\nfig = plt.figure()  # an empty figure with no Axes\n\nplt.show()\n```\n:::\n\n\n<div style='text-align: justify;'>\nFigure kosong tidak dapat divisualisasikan. Untuk membuat suatu figure yang memiliki axes, gunakan function `plt.subplots()`\n</div>\n\n::: {#139c823b .cell execution_count=14}\n``` {.python .cell-code}\nfig, ax = plt.subplots()  # a figure with a single Axes\n\nplt.show()\n```\n:::\n\n\n<div style='text-align: justify;'>\nBagaimana jika kita ingin membuat gabungan dari beberapa Axes dalam 1 figure?\n\nfunction subplots menerima parameter jumlah baris dan jumlah kolom untuk membentuk suatu *grid* yang terdiri atas 1 atau lebih axes\n</div>\n\n::: {#0de93124 .cell execution_count=15}\n``` {.python .cell-code}\nfig, axs = plt.subplots(2, 2)  # a figure with a 2x2 grid of Axes\n\nplt.show()\n```\n:::\n\n\n\n\n<div style='text-align: justify;'>\nSelain dengan function subplots, ada juga function `subplot_mosaic` yang akan menghasilkan axes dengan ukuran yang lebih bervariasi.\n</div>\n\n::: {#b633e5bc .cell execution_count=17}\n``` {.python .cell-code}\n# a figure with one axes on the left, and two on the right:\nfig, axs = plt.subplot_mosaic([['left', 'right_top'],\n                               ['left', 'right_bottom']])\n\nplt.show()\n```\n:::\n\n\n\n\n## Plots\n\n<div style='text-align: justify;'>\nUntuk menambahkan plot pada tiap axis, gunakan function-function plot pada axis dengan index yang bersesuaian.\n</div>\n\n::: {#d5117ba5 .cell execution_count=19}\n``` {.python .cell-code}\nfig, axs = plt.subplots(2, 2, layout=\"constrained\")\n\naxs[0,0].hist(df['age'])\n\naxs[0,0].set_title('Variabel `Age`')\n\naxs[0,1].hist(df['bmi'])\n\naxs[0,1].set_title('Variabel `bmi`')\n\naxs[1,0].hist(df['children'])\n\naxs[1,0].set_title('Variabel `children`')\n\naxs[1,1].hist(df['charges'])\n\naxs[1,1].set_title('Variabel `charges`')\n\nfig.suptitle('Histogram Variabel Numerik')\n\nplt.show()\n```\n:::\n\n\n<div style='text-align: justify;'>\nLebih lanjut, silakan baca dokumentasi dari plt.subplot pada link berikut : [Dokumentasi plt.subplots](https://matplotlib.org/stable/users/explain/axes/axes_intro.html#creating-axes)\n</div>\n\n",
    "supporting": [
      "modul3_files"
    ],
    "filters": [],
    "includes": {}
  }
}