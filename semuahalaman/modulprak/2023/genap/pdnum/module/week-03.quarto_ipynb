{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "format: html\n",
        "execute: \n",
        "  enabled: false\n",
        "---\n",
        "\n",
        "\n",
        "# Week-03 (Multistep dan Sistem persamaan differential)\n",
        "\n",
        "Kembali ke [Persamaan Diferensial Numerik](../pdnum2023.qmd)\n",
        "\n",
        "## Multistep\n",
        "\n",
        "Metode-metode sebelumnya, seperi Euler, Runge-Kutta, dan kawan-kawannya adalah metode jenis one-step, karena kita hanya menggunakan informasi dari satu nilai $t_{i}$. Pada modul berikut akan dijelaskan mengenai metode multistep, dimana kita menggunakan lebih dari satu nilai $t_{i}$ untuk membuat aproksimasi.\n",
        "\n",
        "Terdapat dua jenis metode multistep, yaitu:\n",
        "\n",
        "- Multistep eksplisit, dimana kita mengaproksimasi nilai pada $t_{i+1}$ menggunakan nilai $t$ sebelumnya.\n",
        "\n",
        "- Multistep implisit, dimana kita mengaproksimasi nilai pada $t_{i+1}$ menggunakan nilai pada $t$ sebelumnya, sekaligus nilai pada $t_{i+1}$ itu sendiri.\n",
        "\n",
        "Untuk bagian awal, kita hanya akan menggunakan multistep eksplisit, dan multistep implisit akan dijelaskan kemudian menggunakan cara lain.\n",
        "\n",
        "### Multistep Eksplisit: Metode $n$-step Adams-Bashforth\n",
        "\n",
        "Metode $n$-step Adams-Bashforth menggunakan $n$ titik sebelumnya untuk mengaproksimasi nilai. Karena metode ini adalah metode multistep, maka $n$ nilai awalnya pun harus diperoleh terlebih dahulu. Misal kita ingin menggunakan metode Adams-Bashforth orde 3 , maka $w_{1}, w_{2}$, dan $w_{3}$ harus ada terlebih dahulu sebelum dilanjutkan ke metode Adams-Bashforth. Nilai-nilai awal tersebut dapat diperoleh dari metode-metode one-step sebelumnya, seperti metode Runge-Kutta, yang akan kita gunakan.\n",
        "\n",
        "Berikut rumus untuk metode $n$-step Adams-Bashforth, masing-masing sesuai dengan jumlah step nya.\n",
        "\n",
        "1. Two-step Adams Bashforth\n",
        "\n",
        "$$\n",
        "\\begin{gathered}\n",
        "w_{0}=\\alpha, \\quad w_{1}=\\alpha_{1}, \\\\\n",
        "w_{i+1}=w_{i}+\\frac{h}{2}\\left[3 f\\left(t_{i}, w_{i}\\right)-f\\left(t_{i-1}, w_{i-1}\\right)\\right]\n",
        "\\end{gathered}\n",
        "$$\n",
        "\n",
        "2. Three-step Adams-Bashforth\n",
        "\n",
        "$$\n",
        "\\begin{gathered}\n",
        "w_{0}=\\alpha, \\quad w_{1}=\\alpha_{1}, \\quad w_{2}=\\alpha_{2}, \\\\\n",
        "w_{i+1}=w_{i}+\\frac{h}{12}\\left[23 f\\left(t_{i}, w_{i}\\right)-16 f\\left(t_{i-1}, w_{i-1}\\right)+5 f\\left(t_{i-2}, w_{i-2}\\right)\\right]\n",
        "\\end{gathered}\n",
        "$$\n",
        "\n",
        "3. Four-step Adams-Bashforth\n",
        "\n",
        "$$\n",
        "\\begin{gathered}\n",
        "w_{0}=\\alpha, \\quad w_{1}=\\alpha_{1}, \\quad w_{2}=\\alpha_{2}, \\quad w_{3}=\\alpha_{3} \\\\\n",
        "w_{i+1}=w_{i}+\\frac{h}{24}\\left[55 f\\left(t_{i}, w_{i}\\right)-59 f\\left(t_{i-1}, w_{i-1}\\right)+37 f\\left(t_{i-2}, w_{i-2}\\right)-9 f\\left(t_{i-3}, w_{i-3}\\right)\\right]\n",
        "\\end{gathered}\n",
        "$$\n",
        "\n",
        "4. Five-step Adams-Bashforth\n",
        "\n",
        "$$\n",
        "\\begin{gathered}\n",
        "w_{0}=\\alpha, \\quad w_{1}=\\alpha_{1}, \\quad w_{2}=\\alpha_{2}, \\quad w_{3}=\\alpha_{3}, \\quad w_{4}=\\alpha_{4}, \\\\\n",
        "w_{i+1}=w_{i}+\\frac{h}{720}\\left[1901 f\\left(t_{i}, w_{i}\\right)-2774 f\\left(t_{i-1}, w_{i-1}\\right)+2616 f\\left(t_{i-2}, w_{i-2}\\right)\\right. \\\\\n",
        "\\left.-1274 f\\left(t_{i-3}, w_{i-3}\\right)+251 f\\left(t_{i-4}, w_{i-4}\\right)\\right]\n",
        "\\end{gathered}\n",
        "$$\n",
        "\n",
        "program untuk two-step Adams-Bashforth:\n"
      ],
      "id": "1b73999f"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "%function_file\n",
        "function [t, w] = adams2(f, a, b, n, alpha)\n",
        "  % Inisiasi variabel awal\n",
        "  h = (b - a) / n;\n",
        "  t = zeros(n + 1, 1);\n",
        "  w = zeros(n + 1, 1);\n",
        "  t(1) = a;\n",
        "  w(1) = alpha;\n",
        "  \n",
        "  % Mencari t(2) dan w(2) menggunakan Runge-Kutta orde 4\n",
        "  i = 1;\n",
        "  t(i + 1) = t(i) + h;\n",
        "  m1 = h * f(t(i), w(i));\n",
        "  m2 = h * f(t(i) + (h/2), w(i) + (m1/2));\n",
        "  m3 = h * f(t(i) + (h/2), w(i) + (m2/2));\n",
        "  m4 = h * f(t(i + 1), w(i) + m3);\n",
        "  w(i+1) = w(i) + (m1 + 2*m2 + 2*m3 + m4) / 6;\n",
        "  \n",
        "  % Algoritma utama Adams-Bashforth\n",
        "  for i = 2:n\n",
        "    t(i + 1) = t(i) + h;\n",
        "    k1 = f(t(i), w(i));\n",
        "    k2 = f(t(i-1), w(i-1));\n",
        "    w(i+1) = w(i) + (h/2) * (3*k1 - k2);\n",
        "  endfor\n",
        "endfunction"
      ],
      "id": "7b6416c6",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Berikut ini adalah contoh pengerjaaannya dengan menggunakan metode two-step Adams-Bashforth."
      ],
      "id": "1146563c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "%script file\n",
        "f = @(t, y) (y - t ^ 2 + 1);\n",
        "a = 0;\n",
        "b = 2;\n",
        "alpha = 0.5;\n",
        "n=20\n",
        "[t1, w1] = adams2(f,a,b,n,alpha)\n",
        "\n",
        "[t1,w1]\n",
        "\n",
        "sln = @(t) (t + 1) ^ 2 - 0.5 * exp(t);\n",
        "\n",
        "fplot(sln, [0, 2], 'k');\n",
        "hold on;\n",
        "scatter(t1, w1, 'r');"
      ],
      "id": "867d48e7",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Multistep Implisit: Metode $n$-step Adams-Moulton\n",
        "\n",
        "Serupa dengan metode adams-bashforth, bedanya persamaan iteratif $w_{i+1}$ belum dalam bentuk yang dapat dihitung langsung (melainkan bentuknya implisit). Berikut ini adalah list persamaan iteratifnya (diambil dari buku burden).\n",
        "\n",
        "1. Adams-Moulton Two-Step Implicit Method\n",
        "$$\n",
        "\\begin{aligned}\n",
        "w_0 & =\\alpha, \\quad w_1=\\alpha_1, \\\\\n",
        "w_{i+1} & =w_i+\\frac{h}{12}\\left[5 f\\left(t_{i+1}, w_{i+1}\\right)+8 f\\left(t_i, w_i\\right)-f\\left(t_{i-1}, w_{i-1}\\right)\\right],\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "2. Adams-Moulton Three-Step Implicit Method\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "w_0 & =\\alpha, \\quad w_1=\\alpha_1, \\quad w_2=\\alpha_2, \\\\\n",
        "w_{i+1} & =w_i+\\frac{h}{24}\\left[9 f\\left(t_{i+1}, w_{i+1}\\right)+19 f\\left(t_i, w_i\\right)-5 f\\left(t_{i-1}, w_{i-1}\\right)+f\\left(t_{i-2}, w_{i-2}\\right)\\right],\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "3. Adams-Moulton Four-Step Implicit Method\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "w_0= & \\alpha, \\quad w_1=\\alpha_1, \\quad w_2=\\alpha_2, \\quad w_3=\\alpha_3, \\\\\n",
        "w_{i+1}= & w_i+\\frac{h}{720}\\left[251 f\\left(t_{i+1}, w_{i+1}\\right)+646 f\\left(t_i, w_i\\right)\\right. \\\\\n",
        "& \\left.-264 f\\left(t_{i-1}, w_{i-1}\\right)+106 f\\left(t_{i-2}, w_{i-2}\\right)-19 f\\left(t_{i-3}, w_{i-3}\\right)\\right],\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "\n",
        "Bentuk umum program yang akan dihasilkan\n"
      ],
      "id": "97b78ac1"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "%function_file\n",
        "function [t, w] = adam-moulton-general(f, a, b, n, alpha)\n",
        "  [\n",
        "    Inisialisai awal ...\n",
        "  ]\n",
        "  \n",
        "  [\n",
        "\n",
        "    Mencari nilai w_i lainnya yang dibutuhkan dengan rungge kutta jika \n",
        "    nilai awal tersebut tidak diberikan dengan runge-kutta\n",
        "  ]\n",
        "  \n",
        "  % Algoritma utama Adams-Bashforth\n",
        "\n",
        "\n",
        "  [\n",
        "    Iteratif algoritma adams-moulton\n",
        "\n",
        "    pada saat mencari $w_{i+1}$ gunakan metode numerik favorit anda.\n",
        "  ]\n",
        "\n",
        "endfunction"
      ],
      "id": "692f7b31",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Tinjau bahwa, jika $f$ linear, kita bisa mencarinya nilai bentuk explisit $W_{i+1}$ dengan mudah. Dengan demikian, kita bisa mengganti metode numerik yang digunakan untuk mencari $w_{i+1}$ dengan metode analitik.\n",
        "\n",
        "### Multistep: Metode $n$-step Adams-Moulton-Bashforth (predictor-corrector)\n",
        "\n",
        "Menggunakan nilai $w_{i+1}$ yang didapat secara implisit dari metode adams-moulton, kita masukkan ke dalam metode adams-bashforth untuk mengupdate nilai nilai $w_{i+1}$ kembali.\n",
        "\n",
        "Lihat contoh pada pada sub-chapter berikutnya.\n",
        "\n",
        "## solusi numerik sistem Persamaan Differential\n",
        "\n",
        "### Rungge kutta untuk sistem persamaan differential (vectorize)\n"
      ],
      "id": "817764b8"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "%function_file\n",
        "function [t,w] = rk4_sys(f, a, b, n, y0)\n",
        "  %f :differential equation y_p = f(t,y)\n",
        "  %a :initial time\n",
        "  %b :final time\n",
        "  %n :number of steps\n",
        "  %y0 :initial value\n",
        "\n",
        "  h=(b-a)/n;\n",
        "  t=[a:h:b];\n",
        "  s= length(y0);\n",
        "  w=zeros(s,n+1);\n",
        "  w(:,1)=y0;\n",
        "\n",
        "  for i=1:n\n",
        "    k1=f(t(i),w(:,i));\n",
        "    k2=f(t(i)+h/2,w(:,i)+h*k1/2);\n",
        "    k3=f(t(i)+h/2,w(:,i)+h*k2/2);\n",
        "    k4=f(t(i)+h,w(:,i)+h*k3);\n",
        "    w(:,i+1)=w(:,i)+h*(k1+2*k2+2*k3+k4)/6;"
      ],
      "id": "09201a30",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "yang perlu dicatat disini fungsi `f` merupakan fungsi anonimus yang mengeluarkan vektor hasil evaluasinya.\n",
        "\n",
        "berikut ini adalah contoh penggunaan fungsi `rk4_sys` untuk sistem persamaan differential.\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "& I_1^{\\prime}=f_1\\left(t, I_1, I_2\\right)=-4 I_1+3 I_2+6, \\quad I_1(0)=0 \\\\\n",
        "& I_2^{\\prime}=f_2\\left(t, I_1, I_2\\right)=0.6 I_1^{\\prime}-0.2 I_2=-2.4 I_1+1.6 I_2+3.6, \\quad I_2(0)=0 .\n",
        "\\end{aligned}\n",
        "$$\n",
        "Persamasalahan berikut akan dikerjakan dengan `rk4_sys` dengan mengunakan titik awal $t_0=0$ dan $t_{n+1}=1$ dengan $n=10$ partisi.\n"
      ],
      "id": "d0c521c4"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "%script file\n",
        "f=@(t, I) [-4 * I(1)+ 3 * I(2)+6 ; -2.4*I(1) + 1.6 * I(2)+3.6] % fungsi\n",
        "% perhatikan bahwa  I addalah vektor (hence ada I(1) dan I(2))\n",
        "y0=[0;0] % nilai awal\n",
        "a=0 % titik awal\n",
        "b=1 % titik akhir\n",
        "n=10 % banyaknya partisi.\n",
        "\n",
        "[t_sys, w_sys] = rk4_sys(f,a,b,n,y0)\n",
        "\n",
        "transpose([t_sys ; w_sys]) %rapikan format"
      ],
      "id": "ea7e0ce3",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Cobalah jalankan kode di atas dan lihat hasilnya. selanjutnya bandingkan hasil dengan jawaban pada buku.\n",
        "\n",
        "![](rk_4sys.png)\n",
        "\n",
        "### Predictor-Corrector: Metode Adams-Bashforth-Moulton 2-step untuk sistem persamaan differential (vectorize)\n"
      ],
      "id": "268d6197"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "% the multi-step second order method Adams-Bashforth-Moulton \n",
        "\n",
        "%function_file\n",
        "function [t,w] = abm2_sys(f,a,b,n,y0)\n",
        "  h=(b-a)/n;\n",
        "  t=[a:h:b];\n",
        "  s= length(y0);\n",
        "  w=zeros(s,n+1);\n",
        "  w(:,1)=y0;\n",
        "\n",
        "  w_serch= rk4_sys(f,a,b,n,y0);\n",
        "\n",
        "  w(:,2)= w_serch(:,2);\n",
        "\n",
        "  wnm1 = f(t(1),y0);\n",
        "  wn= f(t(2),y1);\n",
        "\n",
        "  for i=2:n\n",
        "    ws=w(:,i)+h/2*(3*wn-wnm1); % predictor\n",
        "    wnp1= f(t(i+1),ws); % predictor\n",
        "\n",
        "    w(:,i+1)=w(:,i)+h/2*(wn+wnp1); % corrector\n",
        "    wnm1=wn;\n",
        "    wn=f(t(i),w(:,i)); %corector"
      ],
      "id": "33a4ff0d",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "coba",
      "language": "python",
      "display_name": "Python 3.13",
      "path": "C:\\Users\\ZakiZ\\AppData\\Roaming\\jupyter\\kernels\\coba"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}