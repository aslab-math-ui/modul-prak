---
title: "(Pertemuan 10) Regresi Linear di Excel dan R, Komunikasi Hasil: Markdown, Quarto, Pengantar LaTeX"
subtitle: "Linear Regression in Excel and R, Communicating Results: Markdown, Quarto, Intro to LaTeX"
description: "Offline di Departemen Matematika"
date: 02/12/2024
page-navigation: true
format: html
---

Kembali ke [Pengantar Sains Data](./psd2024.qmd)

# Korelasi dan Regresi Linear di Excel

Silakan unduh *worksheet* berikut: [Worksheet Pertemuan 10](./worksheet_pertemuan10.xlsx)

# Korelasi dan Regresi Linear di R

Kita akan menggunakan *dataset* `mtcars`

```{r}
data("mtcars")
```

```{r}
mtcars
```

```{r}
View(mtcars)
```

## Hitungan Korelasi

Di R, ada fungsi `cor` yang menghitung korelasi untuk variabel numerik

```{r}
?cor
```

```{r}
cor(mtcars)
```

Agar lebih mudah dibaca, bisa dibulatkan hingga dua digit di belakang koma:

```{r}
round(cor(mtcars), 2)
```

Baris-baris dan kolom-kolom berupa variabel numerik. Kita dapat membaca korelasi antara dua variabel, misal antara "x" dan "y", dengan membaca nilai di baris "x", kolom "y" (atau sama saja nilai di baris "y", kolom "x").

- Nilai yang jauh dari nol (mendekati 1 atau -1): kedua variabel berkorelasi tinggi (berkaitan dengan erat).

- Nilai positif: korelasi positif; jika nilai salah satu naik, nilai satunya cenderung ikut naik

- Nilai negatif: korelasi negatif; jika nilai salah satu naik, nilai satunya malah cenderung turun; atau sebaliknya, jika nilai salah satu turun, nilai satunya malah cenderung naik

Hitungan korelasi yang dipelajari di kuliah PSD disebut korelasi Pearson. Kita bisa memintanya secara spesifik,

```{r}
round(cor(mtcars, method = "pearson"), 2)
```

atau sewaktu-waktu kalian bisa mencoba hitungan korelasi lain, seperti korelasi Spearman atau korelasi Kendall

```{r}
round(cor(mtcars, method = "spearman"), 2)
round(cor(mtcars, method = "kendall"), 2)
```

## Plot Korelasi

Nilai-nilai korelasi bisa digambarkan/divisualisasikan dengan yang namanya *heatmap*, agar lebih mudah dibaca.

Untuk itu, kita bisa gunakan *package* `corrplot`

Seperti biasa, instal terlebih dahulu kalau belum:

```r
install.packages("corrplot")
```

Lalu aktifkan:

```{r}
library("corrplot")
```

Sebelum membuat *plot* korelasi, kita perlu simpan dulu matriks korelasi (tidak perlu membulatkan):

```{r}
matriks_korelasi <- cor(mtcars, method = "pearson")
```

Kemudian kita tinggal gunakan fungsi `corrplot`

```{r}
?corrplot
```

```{r}
corrplot(matriks_korelasi,
         type = "upper",
         tl.col = "black")
```

```{r}
corrplot(matriks_korelasi,
         type = "upper",
         tl.col = "black",
         method = "color")
```

## Uji Korelasi

Uji korelasi antar 2 variabel

Misalkan, akan dilakukan uji antara variabel `disp` dan `wt` (masih data `mtcars`)

- H0: korelasi $= 0$

- H1: korelasi $\ne 0$

```{r}
?cor.test
```

```{r}
cor.test(mtcars$disp,
         mtcars$wt,
         method = "pearson")
```

Hubungan antara kedua variabel juga bisa digambarkan, misalnya dengan fungsi `ggscatter` dari *package* `ggpubr`

```r
install.packages("ggpubr")
```

```{r}
library("ggpubr")
```

```{r}
ggscatter(mtcars, 
          x = "disp",
          y = "wt",
          add = "reg.line",
          cor.coef = TRUE,
          cor.method = "pearson")
```

## Regresi Linear (Sederhana)

Yang selalu diingat dalam regresi, ada variabel dependen dan independen

Melanjutkan yang sebelumnya, misalkan dianggap variabel dependennya `wt` dan independennya `disp`

Hubungan apa yang terjadi jika variabel dependen dan independennya seperti itu?

Cari persamaan regresinya.

Persamaan regresi linear sederhana:

$$Y = \beta_0 + \beta_1 * X + \text{ error}$$

dengan $\text{ error } \sim N(0, \sigma^2)$

Karena $Y = \text{wt}$ dan $X = \text{disp}$, maka persamaan taksiran regresinya menjadi

$$\text{wt } \approx \beta_0 + \beta_1 * \text{ disp } + \text{ error}$$

Di R, kita bisa membentuk **model linear** dengan fungsi `lm` *(linear model)*

```{r}
?lm
```

Kedua cara penggunaan berikut ini sama saja:

```{r}
model1 <- lm(wt ~ disp, data = mtcars)
```

```{r}
model2 <- lm(mtcars$wt ~ mtcars$disp)
```

Setelah itu, kita bisa melihat ringkasan dari model linear yang terbentuk:

```{r}
summary(model1)
```

$$\text{wt} \approx 1.6 + 0.007 \text{ disp}$$

Interpretasi: Jika `disp` naik 1 satuan, maka RATA-RATA `wt` naik 0.007 kali

Visualisasi sedikit:

```{r}
plot(mtcars$disp,
     mtcars$wt,
     pch = 16)
abline(model1,
       col = "red",
       lwd = 2)
legend("bottomright",
       legend = "garis regresi",
       col = "red",
       lwd = 2,
       bty = "n")
```

# Komunikasi Hasil: Markdown, Quarto, Pengantar LaTeX

Kita telah memperhatikan hubungan antara variabel `wt` dengan variabel `disp`.

Selain kemampuan menganalisis hingga membuat kesimpulan, kemampuan yang tidak kalah penting di dunia data adalah kemampuan berkomunikasi, seperti mengomunikasikan hasil analisis yang dilakukan.

Sebagai praktikum untuk kuliah Pengantar Sains Data, kami ingin memperkenalkan *software* yang mempermudah dalam hal ini, yaitu Quarto: <https://quarto.org/>

Untungnya, Quarto sudah tersedia di RStudio versi terbaru (sejak v2022.7) dan juga ada *package* `quarto` yang bisa diinstal. Mari kita eksplor!

Buat terlebih dahulu suatu dokumen Quarto baru, yaitu *file* `.qmd`, seperti berikut:

![](./static/quarto_01.png)

![](./static/quarto_02.png)

Kalian bisa memberi judul, atau sementara dibiarkan saja `Untitled`. Biarkan juga terpilih opsi `HTML`.

Setelah terbuat, akan muncul tampilan seperti berikut:

![](./static/quarto_03.png)

Kalian bisa mengubah pilihan "Visual" menjadi pilihan "Source" (yaitu kode mentah):

![](./static/quarto_04.png)

Kalian juga bisa menghapus baris `editor: visual` agar *file* `.qmd` akan terbuka di tampilan *Source* secara *default*.

![](./static/quarto_05.png)

Coba tekan tombol **Render**. Akan muncul laman seperti berikut:

![](./static/quarto_06.png)

Perhatikan juga, di sebelah *file* `.qmd` di folder yang menyimpannya, ada *file* HTML yang bisa di-klik-kanan untuk dibuka:

![](./static/quarto_07.png)

Sekarang coba *run*:

```r
install.packages("quarto")
```

Seperti berikut:

![](./static/quarto_08.png)

Lalu:

```{r}
library("quarto")
```

*Render* bisa dilakukan melalui perintah kode `quarto_render` seperti berikut:

```r
quarto_render("Untitled.qmd")
```

![](./static/quarto_09.png)

Kita juga bisa *render* ke format lainnya.

## Render ke `.docx`

Ubah bagian "format" seperti berikut:

![](./static/quarto_10.png)

Sekarang tersedia dua pilihan *render*:

![](./static/quarto_11.png)

Hasil *render* ke format Microsoft Word tampak seperti berikut:

![](./static/quarto_12.png)

## Render ke `.pdf`

Untuk bisa *render* ke PDF, kalian harus instal TinyTeX terlebih dahulu, seperti berikut:

```r
install.packages("tinytex")
```

```r
tinytex::install_tinytex()
```

Kalian bisa cek apakah sudah terinstal:

```{r}
tinytex::is_tinytex()
```

Kemudian, kalian tinggal menambahkan `- pdf` di daftar *format*, akan muncul opsi untuk *render* ke PDF.

## Pengantar Markdown

Bahasa yang digunakan dalam Quarto bernama **markdown**. Sederhana saja:

- Gunakan `*` dan `*` untuk *tulisan miring*

    Contoh: `*tulisan miring*`

- Gunakan `**` dan `**` untuk **tulisan bercetak tebal**

    Contoh: `**tulisan bercetak tebal**`

- Gunakan `***` dan `***` untuk ***tulisan miring bercetak tebal***

    Contoh: `***tulisan miring bercetak tebal***`

Coba ketik suatu kalimat dengan tulisan miring dan tulisan bercetak tebal, lalu *render*. Lihat hasilnya!

Kalian bisa baca lebih lanjut di sini: <https://quarto.org/docs/authoring/markdown-basics.html>

## Pengantar LaTeX

Kalian juga bisa menulis rumus, yang akan muncul dengan rapi di hasil *render*. Nama format penulisan rumus di sini umum dikenal dengan sebutan "LaTeX".

Mudah saja, tulis rumus yang diapit dengan simbol dolar.

Contoh:

- Ketikan: `$1 + 1 = 2$`

- Hasil: $1 + 1 = 2$

Kalian juga bisa menggunakan dua dolar, seperti `$$1 + 1 = 2$$` agar muncul besar di tengah-tengah:

$$1 + 1 = 2$$

Kalian bisa menulis pangkat dengan `^` misalnya `$$2^3 = 8$$`

$$2^3 = 8$$

Kalian juga bisa menggunakan variabel, misalnya

- `$x + 1 = 2$` menjadi $x + 1 = 2$

- `$2^y = 8$` menjadi $2^y = 8$

Tersedia juga simbol-simbol Yunani, seperti

- `\alpha` yaitu $\alpha$

- `\beta` yaitu $\beta$

- `\varepsilon` yaitu $\varepsilon$

- `\sigma` yaitu $\sigma$

- `\Sigma` yaitu $\Sigma$

Kalian juga bisa menulis *subscript* misalnya seperti berikut

- `t_0` menjadi $t_0$

- `\beta_0` menjadi $\beta_0$

- `\beta_1` menjadi $\beta_1$

Sehingga kalian bisa menulis persamaan regresi seperti berikut:

`$$y = \beta_0 + \beta_1 x + \varepsilon$$`

$$y = \beta_0 + \beta_1 x + \varepsilon$$

Apabila kalian ingin membuat semacam laporan tentang hasil analisis hubungan antara variabel `wt` dan variabel `disp`, kalian tinggal menulis paragraf di *file* `.qmd` tersebut, dengan **cetak tebal** dan *tulisan miring* ketika diperlukan, juga dengan rumus regresi ketika diperlukan, dengan menuliskan bahwa

- nilai $\beta_0$ yang diperoleh adalah...

- nilai $\beta_1$ yang diperoleh adalah...
