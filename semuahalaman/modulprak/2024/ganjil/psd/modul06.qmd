---
title: "(Pertemuan 06) Distribusi Kontinu di R, Distribusi di Excel"
subtitle: "Continuous Distributions in R, Distributions in Excel"
description: "Offline di Departemen Matematika"
date: 10/28/2024
page-navigation: true
format: html
---

Kembali ke [Pengantar Sains Data](./psd2024.qmd)

Melanjutkan dari pertemuan sebelumnya tentang distribusi diskirt di R, pada pertemuan kali ini, kita akan membahas tentang beberapa distribusi kontinu di R, tepatnya distribusi *uniform* (kontinu) dan distribusi normal, baik dengan *base R* ataupun dengan `distr`. Kemudian, kita juga akan membahas tentang distribusi probabilitas di Excel, baik diskrit maupun kontinu, terutama cara menghasilkan data *random* menggunakan Analysis ToolPak.

# Distribusi Kontinu dengan *base R*

Sebenarnya ada banyak distribusi kontinu. Namun, sesuai dengan batasan materi kuliah Pengantar Sains Data, kita hanya akan membahas dua distribusi kontinu, yaitu

- distribusi *uniform* (kontinu), dan

- distribusi normal.

Kalian akan mempelajari lebih banyak distribusi, baik distribusi diskrit maupun distribusi kontinu, serta berbagai macam "penggabungannya", di mata kuliah Statistika Matematika 1.

Seperti biasa, kita masih bermain dengan fungsi `d`..., `p`,..., `q`..., dan `r`... yang bisa kita ingat kembali:

- `d`... melambangkan PDF

- `p`... melambangkan CDF

- `q`... melambangkan *inverse CDF* atau fungsi kuantil *(quantile function)*

- `r`... melambangkan RNG *(random number generator)*

## Distribusi Normal

Sesuai namanya, distribusi normal sering dijumpai di kehidupan sehari-hari; tidak jarang terjadi, persebaran berbagai data, yang awalnya terkesan acak, ternyata mendekati distribusi normal. 

Distribusi normal memiliki dua parameter, yaitu

- **rata-rata atau *mean*** $\mu$ (mu)

- **variansi atau *variance*** $\sigma^2$ (sigma kecil, dikuadratkan), yang harus taknegatif *(nonnegative)*

    Catatan: sigma besar adalah $\Sigma$ yang biasa kita gunakan untuk notasi penjumlahan atau sumasi.

Perhatikan bahwa rata-rata termasuk ukuran pemusatan data, sedangkan variansi termasuk ukuran persebaran data (juga disebut keragaman data). Nilai kedua parameter tersebut bisa diubah-ubah sesuai keperluan. Dengan demikian, distribusi normal bisa cukup fleksibel menyesuaikan dengan berbagai macam data.

Apabila suatu variabel acak $X$ mengikuti distribusi normal, biasa ditulis

$$X \sim N(\mu, \sigma^2)$$

Namun, daripada berdasarkan rata-rata dan variansi, terkadang suatu distribusi normal ditentukan berdasarkan rata-rata dan **simpangan baku *(standard deviation)***, biasa disingkat `sd`, `std`, `stdev`, atau `stddev`, dan biasa dilambangkan $\sigma$, yang merupakan akar dari variansi. Di R, *standard deviation* biasa dilambangkan `sd`.

Perbedaan antara variansi dan *standard deviation* hanyalah masalah kuadrat. Berhati-hati saja.

Selain itu, perlu diingat bahwa penulisan

$$X \sim N(\mu, \sigma^2)$$

selalu menggunakan variansi yaitu $\sigma^2$, daripada *standard deviation*.

*Support* dari distribusi normal adalah keseluruhan garis bilangan real *(the real line)*, yaitu interval buka $(-\infty, \infty)$

### PDF

Untuk $-\infty < x < \infty$, PDF dari distribusi normal bisa ditulis

$$n(x; \mu, \sigma) = \frac{1}{\sigma\sqrt{2\pi}}e^{-\frac{1}{2}\frac{(x-\mu)^2}{\sigma^2}}$$

Perhatikan, ada konstanta $\pi$ (pi) dan konstanta Euler $e$. Kedua konstanta tersebut tersedia di R:

```{r}
pi
```

```{r}
exp(1)
```

Sebenarnya, `exp` adalah fungsi eksponensial $e^x$.

**Distribusi normal standar *(standard normal distribution)*** adalah distribusi normal istimewa, yang memiliki parameter $\mu = 0$ dan parameter $\sigma = 1$, atau bisa dilambangkan $N(0,1)$.

```{r}
dnorm(1.3,
      mean = 0,
      sd = 1)
```

Untuk *plotting*, kita tidak perlu menggunakan keseluruhan *support* (mustahil juga), karena untuk nilai-nilai yang tidak dekat dengan nilai tengah atau rata-rata, probabilitasnya hampir nol. Oleh karena itu, kita cukup memilih interval yang memuat titik-titik yang dekat dengan rata-rata, misal $0 \pm 4$, tidak perlu terlalu besar.

```{r}
x_norm_1 <- seq(0-4, 0+4, length = 100)
x_norm_1
```

```{r}
plot(x_norm_1,
     dnorm(x_norm_1, mean = 0, sd = 1),
     type = 'o')
```

Contoh distribusi normal yang lain: $N(2,5)$

```{r}
dnorm(2.7,
      mean = 2,
      sd = 5)
```

Ternyata, nilai untuk distribusi normal dengan parameter lain bisa diperoleh dari distribusi normal standar, memanfaatkan yang namanya ***Z-score***.

$$Z = \frac{X-\mu}{\sigma}$$

Namun, ketika menghitung PDF dan sudah memperoleh hasil dari distribusi normal standar, kita perlu membagi lagi hasilnya dengan *standard deviation* yang aslinya, karena ada masalah *scaling* (skala).

Misalnya, untuk $X=2.7$ dan $X \sim N(2,5)$,

$$Z = \frac{X-2}{5} = \frac{2.7-2}{5}$$

Namun, daripada sekadar menghitung

```{r}
dnorm((2.7-2)/(5),
      mean = 0,
      sd = 1)
```

kita harus membagi lagi dengan *standard deviation* yang aslinya yaitu 5, sebagai berikut:

```{r}
dnorm((2.7-2)/(5),
      mean = 0,
      sd = 1)/5
```

Bandingkan:

```{r}
dnorm(2.7,
      mean = 2,
      sd = 5)
```

Sama, ya!

Untuk membuat *plot* dari $N(2,5)$, kita buat titik-titik `x_norm_2` sedemikian sehingga nilai-nilainya berada di sekitar rata-rata 2, tetapi dengan interval yang lebih luas, misal $2 \pm 20$, karena *standard deviation* yang lebih besar dibandingkan dengan membuat *plot* $N(0,1)$ tadi.

```{r}
x_norm_2 <- seq(2-20, 2+20, length = 100)
x_norm_2
```

```{r}
plot(x_norm_2,
     dnorm(x_norm_2, mean = 2, sd = 5),
     type = 'o')
```

**Untuk distribusi kontinu, perhitungan probabilitas harus melalui CDF, sedangkan PDF hanya menggambarkan bentuk distribusi.**

Tidak seperti distribusi diskrit, **PDF distribusi kontinu di $\mathbf{x}$ TIDAK SAMA DENGAN $\mathbf{\text{Pr}(X=x)}$.** Bahkan, di distribusi kontinu, untuk tiap $x$ selalu berlaku

$$\text{Pr}(X=x) = 0$$

Mengapa demikian? Misalnya, untuk distribusi normal, kita ingin menghitung $\text{Pr}(X=2.7)$. Artinya, kita meminta probabilitas bahwa nilai yang kita peroleh adalah tepat 2.7, **tidak boleh meleset sedikitpun**. Kalau kita memperoleh misalnya 2.7000000001, itu sudah dianggap angka yang berbeda. Tentunya, memperoleh persis suatu angka tertentu sangat tidak realistis, sehingga probabilitasnya adalah nol.

Dengan demikian, untuk distribusi kontinu, probabilitas di tepat satu titik, di titik apapun, itu selalu nol.

Kalau begitu, apakah probabilitas bahwa kita dapat nilai apapun sama sekali itu adalah nol, sehingga tidak ada yang mungkin? Tidak juga. Mungkin terdengar aneh. Namun, sebenarnya, untuk distribusi kontinu, **daripada menghitung probabilitas memperoleh tepat suatu nilai tertentu, kita biasa menghitung probabilitas memperoleh nilai di interval tertentu.** Dengan begitu, barulah probabilitasnya taknol.

Sebagaimana di distribusi diskrit, kita bisa menghitung probabilitas untuk rentang atau interval tertentu menggunakan CDF. Oleh karena itulah, perhitungan probabilitas untuk distribusi kontinu selalu menggunakan CDF, tidak pernah menggunakan PDF.

### CDF

```{r}
pnorm(1.96,
      mean = 0,
      sd = 1)
```

```{r}
plot(x_norm_1,
     pnorm(x_norm_1, mean = 0, sd = 1),
     type = 'o')
```

Contoh:

Misalkan $X$ merupakan variabel acak yang berdistribusi normal dengan $\mu = 50$ dan ~~variansi~~ *standard deviation* $\sigma = 10$. Hitunglah

$$\text{Pr}(45 < X < 62)$$

Jawab:

Perhatikan bahwa

$$\begin{align*}
    \text{Pr}&(45 < X < 62) \\
               &= \text{Pr}(X < 62) - \text{Pr}(X \leq 45) \\
               &= \text{Pr}(X \leq 62) - \text{Pr}(X \leq 45)
\end{align*}$$

karena

$$\begin{align*}
\text{Pr}&(X < 62) \\
          &= \text{Pr}(X \leq 62) - \text{Pr}(X = 62) \\
          &= \text{Pr}(X \leq 62) - 0 \\
          &= \text{Pr}(X \leq 62)
\end{align*}$$

Sehingga, $\text{Pr}(45 < X < 62)$ bisa dihitung dengan

$$\text{Pr}(X \leq 62) - \text{Pr}(X \leq 45)$$

yaitu selisih dua nilai CDF:

```{r}
pnorm(62, mean = 50, sd = 10) -
  pnorm(45, mean = 50, sd = 10)
```

Kesimpulannya,

$$\text{Pr}(45 < X < 62) \approx 0.5763928$$

Cara lain, kita bisa juga memanfaatkan *Z-score*. Misalkan

$$Z = \frac{X-\mu}{\sigma} = \frac{X-50}{10}$$

Maka

$$\begin{align*}
    \text{Pr}&(45 < X < 62) \\
    &= \text{Pr}\left(\frac{45-50}{10} < \frac{X-50}{10} < \frac{62-50}{10}\right) \\
    &= \text{Pr}\left(\frac{45-50}{10} < Z < \frac{62-50}{10}\right) \\
    &= \text{Pr}\left(Z \leq \frac{62-50}{10}\right) - \text{Pr}\left(Z \leq \frac{45-50}{10}\right)
\end{align*}$$

Sehingga kita tinggal menghitung:

```{r}
pnorm((62-50)/10, mean = 0, sd = 1) -
  pnorm((45-50)/10, mean = 0, sd = 1)
```

Daripada langsung mengetik sepanjang itu, kita juga bisa menghitung dulu

```{r}
(62-50)/10
(45-50)/10
```

baru memasukkan,

$$\begin{align*}
    \text{Pr}&(45 < X < 62) \\
    &= \text{Pr}\left(Z \leq \frac{62-50}{10}\right) - \text{Pr}\left(Z \leq \frac{45-50}{10}\right) \\
    &= \text{Pr}\left(Z \leq 1.2\right) - \text{Pr}\left(Z \leq -0.5\right)
\end{align*}$$

sehingga bisa dihitung

```{r}
pnorm(1.2, mean = 0, sd = 1) -
  pnorm(-0.5, mean = 0, sd = 1)
```

Apabila sewaktu-waktu kalian perlu menghitung ini tetapi tidak bisa mengakses R, kalian bisa memanfaatkan **tabel normal standar *(standard normal table)***, yaitu tabel yang mendata **berbagai nilai CDF untuk distribusi normal standar** yaitu $N(0,1)$, dan kebetulan juga disebut tabel *Z-score*. Carilah nilai CDF untuk $Z=1.2$ dan nilai CDF untuk $Z=-0.5$, lalu hitung selisihnya.

Apabila menggunakan `mean = 0` dan `sd = 1`, kalian juga bisa saja menganggap fungsi `pnorm` sebagai fungsi untuk memperoleh nilai pada tabel normal standar. Misalnya, nilai di $Z=1.2$ adalah

```{r}
pnorm(1.2, mean = 0, sd = 1)
```

dan nilai di $Z=-0.5$ adalah

```{r}
pnorm(-0.5, mean = 0, sd = 1)
```

Silakan bandingkan dengan tabel normal standar, yang misalnya bisa kalian temukan di lampiran buku pengantar statistik seperti karangan Walpole.

### *Quantile function*

Misalkan diketahui $X \sim N(0,1)$ dan

$$\text{Pr}(X \leq x) = 0.975$$

Bagaimana cara menentukan $x$?

Perhatikan bahwa, fungsi probabilitas seperti di atas melambangkan CDF, dan kita ingin mencari nilai $x$ yang membuat nilai CDF menjadi 0.975. Caranya, kita bisa menggunakan *inverse CDF* atau *quantile function*, sebagai berikut.

```{r}
qnorm(0.975,
      mean = 0,
      sd = 1)
```

Ternyata, nilai $x$ yang diinginkan sekitar 1.96.

Kalau ragu, kita bisa periksa dengan menghitung nilai CDF untuk $x=1.96$

```{r}
pnorm(1.96,
      mean = 0,
      sd = 1)
```

Benar ya!

Tentunya, `mean` tidak harus nol dan `sd` tidak harus satu. Contohnya, apabila diketahui

$$X \sim N(2,5), \quad \text{Pr}(X=x) = 0.73$$

maka kita bisa memperoleh $x$ dengan `qnorm` yaitu *inverse CDF*

```{r}
qnorm(0.73, mean = 2, sd = 5)
```

Sehingga $x \approx 5.064$, yang bisa kita periksa dengan `pnorm` yaitu CDF

```{r}
pnorm(5.064, mean = 2, sd = 5)
```

Cukup dekat.

### RNG

```{r}
set.seed(62)
n <- 100
random_normal_1 <- rnorm(n, mean = 0, sd = 1)
random_normal_1
```

Untuk distribusi kontinu, tidak mungkin kita buat *bar plot*, karena banyaknya elemen di *support* sudah *infinite* (tak berhingga), bahkan *uncountable* (tak terhitung).

Kita bisa membuat *histogram*,

```{r}
hist(random_normal_1)
```

yang kemudian bisa kita kostumisasi (maksudnya *customize*) atau ubah-ubah opsinya:

```{r}
hist(random_normal_1,
     breaks = 7,
     main = "Histogram 100 sampel dari N(0,1)",
     xlab = "Nilai X",
     ylab = "Banyaknya sampel",
     col = "orange")
```

Untuk distribusi kontinu, selain membuat *histogram*, kita juga bisa membuat yang namanya ***density plot***. Intinya, ini adalah perkiraan bentuk distribusi kontinu berdasarkan data yang diberikan. Dalam hal ini, dengan data *random* yang kita miliki, kita bisa mencoba membentuk kembali perkiraan bentuk distribusi aslinya, yakni distribusi normal.

```{r}
plot(density(random_normal_1),
     main = "density plot: normal, mean 0, sd 1")
```

Cukup dekat, ya! Memang tidak sempurna, karena penarikan data atau *sampling* yang kita lakukan bersifat *random*, tidak menentu.

Kita baru mencoba menarik data *random* dari $N(0,1)$, tapi tentunya kita bisa melakukan langkah yang sama hingga *plotting* untuk parameter lain, misalnya rata-rata $\mu=10$ dan *standard deviation* $\sigma=8$.

```{r}
random_normal_2 <- rnorm(n, mean = 10, sd = 8)
```

```{r}
hist(random_normal_2,
     main = "Histogram 100 sampel dari N(10,8)")
```

```{r}
plot(density(random_normal_2),
     main = "density plot: normal, mean 10, sd 8")
```

### (Pengayaan) Menghampiri distribusi binomial dengan distribusi normal

Misalkan kita membuat *bar plot* dari $X \sim \text{Binom}(15, 0.4)$, yaitu distribusi binomial dengan banyaknya percobaan $n=15$ dan probabilitas sukses $p=0.4$, misalnya dengan *base R*,

```{r}
x_binom <- seq(0, 15, by = 1)
y_binom <- dbinom(x_binom, size = 15, prob = 0.4)
barplot(height = y_binom,
        names.arg = x_binom)
```

atau dengan ggplot2:

```{r}
library("ggplot2")
```

```{r}
x_binom <- seq(0, 15, by = 1)
y_binom <- dbinom(x_binom, size = 15, prob = 0.4)
df_binom <- data.frame(x = x_binom, Probabilitas = y_binom)
```

```{r}
ggplot(df_binom, aes(x = x, y = Probabilitas)) +
  geom_bar(stat = "identity", fill = "blue")
```

Kemudian, kita bisa menghitung ekspektasi dan *standard deviation* dari $X \sim \text{Binom}(15, 0.4)$ yaitu

$$\begin{align*}
\text{E}[X] &= np \\
      &= (15)(0.4) = 6
\end{align*}$$

$$\begin{align*}
\text{Var}[X] &= npq = np(1-q) \\
      &= (15)(0.4)(1-0.4) = (15)(0.4)(0.6) \\
      &= 3.6
\end{align*}$$

$$\begin{align*}
\sigma &= \sqrt{\sigma^2} = \sqrt{\text{Var}[X]} \\
      &= \sqrt{3.6} = \frac{3}{5}\sqrt{10}
\end{align*}$$

lalu dengan informasi tersebut, kita timpa *bar plot* binomial dengan *plot* PDF distribusi normal $N\left(\mu, \sigma^2\right) = N(6, 3.6)$ sebagai berikut:

```{r}
x_norm_3 <- seq(0, 15, length = 100) # rentangnya sama dengan x_binom
y_norm_3 <- dnorm(x_norm_3, mean = 6, sd = sqrt(3.6))
df_norm <- data.frame(x = x_norm_3, Densitas = y_norm_3)
```

```{r}
ggplot(df_binom, aes(x = x, y = Probabilitas)) +
  geom_bar(stat = "identity", fill = "blue") +
  geom_line(data = df_norm, aes(x = x, y = Densitas))
```

Wah, ternyata sangat mendekati, ya! **Distribusi normal bisa digunakan untuk menghampiri distribusi binomial**, yaitu

$$\text{Binom}(n,p) \approx \text{N}\left(np,npq\right)$$

dan semakin besar nilai $n$, semakin akurat.

## Distribusi *Uniform* (Kontinu)

### PDF

```{r}
dunif(40, min = 25, max = 100)
```

```{r}
x_unif <- seq(25-5, 100+5, length = 100)
x_unif
```

```{r}
plot(x_unif,
     dunif(x_unif, min = 25, max = 100),
     type = 'o')
```

### CDF

```{r}
punif(40, min = 25, max = 100)
```

### *Quantile function*

```{r}
qunif(0.2, min = 25, max = 100)
```

### RNG

```{r}
set.seed(61)
n <- 100
random_unif <- runif(n, min = 25, max = 100)
random_unif
```

```{r}
hist(random_unif)
```

```{r}
plot(density(random_unif),
     main = "density plot: uniform, min 25, max 100")
```

# Distribusi Kontinu dengan `distr`

```{r}
library("distr")
library("distrEx")
```

## Distribusi Uniform (Kontinu)

```{r}
dist1 <- Unif(Min = 25, Max = 100)
```

```{r}
plot(dist1)
```

```{r}
E(dist1)
var(dist1)
```

```{r}
d(dist1)(40)
p(dist1)(40)
q(dist1)(0.2)
```

## Distribusi Normal

```{r}
dist2 <- Norm(mean = 0, sd = 1)
```

```{r}
plot(dist2)
```

```{r}
E(dist2)
var(dist2)
```

```{r}
d(dist2)(1.96)
p(dist2)(1.96)
q(dist2)(0.975)
```

# Distribusi di Excel

Silakan unduh *worksheet* berikut untuk bermain di Excel dengan berbagai distribusi, baik diskrit maupun kontinu, yang telah kita bahas, terutama untuk bermain dengan *random number generation*.

*Worksheet* versi terbaru: [Worksheet Pertemuan 6 (Revisi)](./worksheet_pertemuan6_rev.xlsx)

*Worksheet* versi sebelumnya:

- [Worksheet Pertemuan 6](./worksheet_pertemuan6.xlsx)

Kita akan memanfaatkan yang namanya "Analysis ToolPak", juga disebut "XLMiner Analysis ToolPak". Cara mengaktifkannya tergantung versi Excel, juga tergantung apakah sedang menggunakan Microsoft Excel di *desktop* atau mengakses secara *online*.

## Mengaktifkan Analysis ToolPak: Microsoft 365 Excel (Web)

Jika kalian menggunakan Excel di versi web Microsoft 365, kalian bisa mencari tombol Add-ins di sisi kanan atas layar kalian (lihat gambar)

![](./static/toolpak_365_01.png)

Selanjutnya, kalian bisa ketik "XLMiner Analysis Toolpak" pada search bar

![](./static/toolpak_365_02.png)

Akan muncul list "Anova: Single Factor", "Anova: Two Factor" dan lainnya. Langsung saja scroll hingga ditemukan Random Number Generation.

Lalu, ikuti petunjuk yang diberikan di *file*

![](./static/toolpak_365_03.png)

## Mengaktifkan Analysis ToolPak: Excel 2021

*(work in progress)*
