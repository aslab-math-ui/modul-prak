---
title: "Review R dan Regresi Linier Sederhana"
subtitle: "Simple Linear Regression"
image: static\Plot regresi.png
description: "Offline di Departemen Matematika"
date: 09/23/2024
page-navigation: true
format: html
---

# Review R

## Instalasi Library

**<span style="color: #FF6F61;">install.packages</span>**
(**<span style="color: #FF6F61;">`Nama Packages`</span>**) , untuk mengunduh library yang diperlukan kita dapat mengganti `Nama Packages` dengan packages yang kita butuhkan. Jangan lupa untuk menambahkan tanda `" "` atau `' '` sebelum dan sesudah Nama packages

```{r}
#| eval: false
install.packages('psych')
```

## Mengimport Library

**<span style="color: #FF6F61;">library</span>**
(**<span style="color: #FF6F61;">`Nama Packages`</span>**) , untuk mengimport atau menggunakan library yang sudah diunduh sebelumnya kita dapat menggunakan fungsi tersebut dengan mengubah `Nama Packages` menjadi packages yang dibutuhkan atau yang sudah diunduh sebelumnya. Pada bagian import library tidak diperlukan tanda `" "` atau `' '`

```{r}
#| eval: false
library(psych)
```

## Membaca Data

pada dasarnya pembacaan file di R studio bisa berbagai macam format file , untuk contohnya:

- **<span style="color: #FF6F61;">library</span>** (**<span style="color: #FF6F61;">`readxl`</span>**) untuk membaca data yang berformat `.xlsx` atau `.xls`
- **<span style="color: #FF6F61;">library</span>** (**<span style="color: #FF6F61;">`readr`</span>**) untuk membaca data yang berformat `.csv`

```{r}
#| eval: false
library(readxl)
library(readr)
```

### Tahap - Tahap Membaca Data

1. Membuka Menu File pada RStudio

![](static/File%20Menu.png)

2. Memilih File / Data yang diinginkan

![](static/File%20Name.png)

3. Memilih section `import dataset`

![](static/File%20Section.png)

4. Megcopy File Path URL

![](static/File%20URL.png)

setelah mendapatkan file url , selanjutnya akan dibaca menggunakan **<span style="color: #FF6F61;">read_csv</span>**
(**<span style="color: #FF6F61;">`'file_url'`</span>**) , jangan lupa untuk mengubah file url sesuai file url yang didapatkan dari tahap mecari data. Selain itu jangan lupa untuk menambahkan tanda `' '` atau `" "` sebelum dan sesudah file url yang didapatkan. 

```{r}
#| eval: false
library(readr)

data <- read_csv('~/Downloads/Iris.csv')
```

## Memeriksa Data

Untuk melanjutkan modul ini, akan digunakan dataset iris bawaan r yang dapat diakses dengan syntax berikut.

```{r}
data(iris)
data <- iris
```

Untuk memeriksa data dapat menggunakan banyak cara diantaranya:

1. **<span style="color: #FF6F61;">View</span>** (**<span style="color: #FF6F61;">`data`</span>**) , untuk melihat keseluruhan data
2. **<span style="color: #FF6F61;">head</span>** (**<span style="color: #FF6F61;">`data`</span>**) , untuk melihat 6 data teratas
3. **<span style="color: #FF6F61;">tail</span>** (**<span style="color: #FF6F61;">`data`</span>**) , untuk melihat 6 data terbawah 

jangan lupa untuk mengubah variabel `data` sesuai dengan variabel yang didefinisikan sebelumnya.

```{r}
#| eval: false
View(data)
```

```{r}
head(data)
```

```{r}
tail(data)
```

## Tipe Data

Untuk memperoleh informasi tipe data dari sebuah data kita akan menggunakan  **<span style="color: #FF6F61;">str</span>** (**<span style="color: #FF6F61;">`data`</span>**) , jangan lupa untuk mengubah `data` sesuai variabel yang didefinisikan sebelumnya

```{r}
str(data)
```

Penjelasan tipe data:

- `num` : Num mengartikan bahwa variabel tersebut adalah nilai numerik / sebuah angka
- `chr` : Chr mengartikan bahwa variabel tersebut adalah nilai yang berupa tulisan atau bisa disebut juga string

## Statistik Deksriptif

Untuk memeriksa statisika deskriptif dari data dapat menggunakan:

1. **<span style="color: #FF6F61;">library</span>** (**<span style="color: #FF6F61;">`psych`</span>**)
2. **<span style="color: #FF6F61;">library</span>** (**<span style="color: #FF6F61;">`DescTools`</span>**)
3. **<span style="color: #FF6F61;">library</span>** (**<span style="color: #FF6F61;">`moments`</span>**)

Untuk penjelasan fungsi statistik deskriptif bisa dilihat pada tabel berikut:


| **Fungsi**                            | **Penjelasan**                                                                          | **Library**     |
|----------------------------------------|------------------------------------------------------------------------------------------|-----------------|
| `mean(data)`                             | Menghitung rata-rata dari data.                                                       | Base R          |
| `median(data)`                           | Menghitung nilai tengah dari data.                                                    | Base R          |
| `sum(data)`                              | Menghitung jumlah total elemen dalam data.                                                 | Base R          |
| `sd(data)`                               | Menghitung standar deviasi dari data.                                                 | Base R          |
| `var(data)`                              | Menghitung varians dari data.                                                         | Base R          |
| `Mode(data)`                             | Menghitung modus dari data, nilai yang paling sering muncul.                          | DescTools       |
| `standarerror <- sd(data)/sqrt(length(data))`| Menghitung standar error dari data.                                                   | Base R          |
| `sort(data)`                             | Mengurutkan elemen dalam dari nilai terkecil ke terbesar.                             | Base R          |
| `min(data)`                              | Menghitung nilai minimum dari data.                                                   | Base R          |
| `max(data)`                              | Menghitung nilai maksimum dari data.                                                  | Base R          |
| `range(data)`                            | Menghitung selisih antara nilai maksimum dan minimum dari data.                       | Base R          |
| `quantile(data, prob=0.25)`              | Menghitung kuartil ke-1 (Q1) atau persentil ke-25 dari data.                          | Base R          |
| `quantile(data, prob=0.75)`              | Menghitung kuartil ke-3 (Q3) atau persentil ke-75 dari data.                          | Base R          |
| `skewness(data)`                         | Menghitung kemiringan distribusi (skewness) dari data.                                | moments         |
| `kurtosis(data)`                         | Menghitung keruncingan distribusi (kurtosis) dari data.                               | moments         |

```{r}
#| output: false
library(psych)
library(DescTools)
library(moments)
```

```{r}
mean(data$Petal.Length)
median(data$Petal.Length)
sd(data$Petal.Length)
var(data$Petal.Length)
```

untuk melihat keseluruhan statistika deskriptif dapat menggunakan :

- **<span style="color: #FF6F61;">summary</span>** (**<span style="color: #FF6F61;">`data`</span>**) , 
- **<span style="color: #FF6F61;">describe</span>** (**<span style="color: #FF6F61;">`data`</span>**) , menggunakan library `psych` untuk statistika deksriptif yang lebih advance

```{r}
summary(data)
```

```{r}
describe(data)
```

## Split Data

- untuk membuat split data kita dapat menggunakan : **<span style="color: #FF6F61;">sample</span>**() ,

- untuk memperoleh hasil yang selalu sama jangan lupa untuk mengatur seed dengan cara :
**<span style="color: #FF6F61;">set.seed</span>**(**<span style="color: #FF6F61;">`42`</span>**) , angka `42` dapat digantikan sesuai yang diinginkan.

```{r}
set.seed(42) 

index <- sample(1:nrow(data), size = 0.8 * nrow(data))

train_data <- data[index, ]  # 80% of the data
test_data <- data[-index, ] # 20% of the data
```

`size` dapaat diatur sesuai ketentuan , jika ketentuannya diambil 70% data maka dapat mengubah `size` menjadi 0.7.

# Regresi Linier Sederhana

Untuk mendefinisikan suatu regresi linier sederhana kita dapat menggunakan fungsi **<span style="color: #FF6F61;">lm()</span>** , dengan cara:

**<span style="color: #FF6F61;">lm</span>**(**<span style="color: #FF6F61;">`variabel response` ~ `variabel prediktor` , data = `data`</span>**)

dimana :

- Variabel Response (`y`)
- Variabel Prediktor (`X`)

```{r}
model <- lm(Petal.Length ~ Petal.Width, data = train_data)
model
```

## Interpretasi `summary(model)`

Fungsi `summary(model)` dapat digunakan untuk melihat informasi mengenai model yang telah dibentuk.

```{r}
summary(model)
```

## Visualisasi Model

Untuk membuat visualisasi regresi linier sederhana, lakukan langkah-langkah berikut:
1. Buat scatter plot variabel respons dan variabel prediktor dengan function `plot(pred, resp)`
2. Buat garis regresi dengan function `abline(model)`
3. Buat keterangan garis regresi dengan function `legend()` (*optional)

```{r}
#| output: false
# Scatter Plot Petal.Width ~ Petal.Length
plot(iris$Petal.Width,
     iris$Petal.Length,
     xlab = "Petal Width",
     ylab = "Petal Length",
     main = "Plot Regresi Petal Length ~ Petal Width",
     pch = 20)

# Garis Regresi
abline(model,
       col = "red",
       lwd = 2)

legend("bottomright",
       legend = "Garis Regresi",
       col = "blue",
       lwd = 2,
       bty = "n")
```

![](static/Plot%20regresi.png)

## Interval Kepercayaan dan Interval Prediksi 

Interval Kepercayaan untuk taksiran koefisien dapat dihitung dengan fungsi `confint(model)`

```{r}
confint(model, level = 0.9)
```

Interval Prediksi untuk suatu nilai-nilai di luar data yang digunakan untuk pemodelan dapat dihitung dengan fungsi `predict(model, newdata, interval='prediction')`

```{r}
predict(model, newdata = test_data, interval = "prediction", level = 0.9)
```

Untuk suatu nilai x tertentu, dapat dicari interval prediksinya dengan syntax berikut

```{r}
predict(model, newdata = data.frame(Petal.Width=20), interval = "prediction", level = 0.9)
```

## Representasi Grafik Residual Model

Residual model dapat diakses dengan memanggil `model$residual` atau `resid(model)`

```{r}
head(model$residual)
```

```{r}
head(resid(model))
```

Plot residual dapat dibentuk dengan cara-cara berikut.

```{r}
plot(model$residual)
```

```{r}
plot(model, 1)
```

```{r}
hist(model$residual)
```