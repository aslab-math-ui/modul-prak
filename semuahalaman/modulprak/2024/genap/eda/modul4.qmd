---
title: "Pertemuan 4 : Data Visualization (seaborn)"
image: static\images\seaborn.png
description: "Data visualization in python using seaborn"
date: 04/30/2024
page-navigation: true
jupyter: python3
format: html
---

Kembali ke [EDA](./eda2024genap.qmd)

# Seaborn

<div style='text-align: justify;'>
Seaborn adalah library visualisasi data yang dibangun di atas **matplotlib**, dan menggunakan struktur data yang ada pada library **pandas**. Seaborn banyak digunakan karena penggunaannya yang cukup *simple* dibandingkan dengan matplotlib.pyplot dengan hasil visualisasi yang lebih beragam.

baca dokumentasi seaborn di sini : [Seaborn](https://seaborn.pydata.org/tutorial/introduction.html)
</div>
___

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#load dataset yang disediakan oleh modul atau library seaborn
iris = sns.load_dataset('iris')
iris
```

<div style='text-align: justify;'>
Berikut salah satu contoh visualisasi dari data iris yang dihasilkan oleh seaborn.
</div>

```{python}
#| echo: false

from matplotlib import pyplot as plt
import seaborn as sns
iris.groupby('species').size().plot(kind='barh', color=sns.palettes.mpl_palette('Dark2'))
plt.gca().spines[['top', 'right',]].set_visible(False)

plt.show()
```
___

# Inputs

<div style='text-align: justify;'>
Seaborn memiliki 3 cara untuk menginput data sebagai parameter (sumbu y dan/atau sumbu x) dari fungsi-fungsi visualisasinya.

1. List/Series/Array
2. Pandas Dataframe dan kolom
3. Langsung masuk ke dataframenya untuk diolah

</div>

## List/Series/Array

```{python}
#Mengambil isinya saja dari kolom sepal length dan sepal width
length = iris['sepal_length'].values
width = iris['sepal_width'].values
print(length, width)
```

```{python}
sns.scatterplot(x=length, y=width)

plt.show()
```

## Dataframe dan kolomnya

```{python}
sns.scatterplot(x=iris['sepal_length'], y=iris['sepal_width'])

plt.show()
```

atau

```{python}
sns.scatterplot(x='sepal_length', y='sepal_width', data=iris)

plt.show()
```

## Olah dataframe

```{python}
sns.boxplot(data=iris)

plt.show()
```

# Plots

<div style='text-align: justify;'>
Seaborn memiliki banyak sekali jenis plot dengan fungsi yang berbeda-beda. 5 diantaranya yang akan dibahas pada pertemuan ini :

1. Distribution Plot
2. Count Plot
3. Heatmap
4. Scatter Plot
5. Box Plot

untuk plot lainnya, silakan telusuri dokumentasi seaborn berikut :

[Seaborn Plots](https://seaborn.pydata.org/examples/index.html)
</div>

## Distribution Plot

```{python}
sns.displot(iris['petal_length'])

plt.show()
```

```{python}
iris['petal_length'].skew()
```

```{python}
sns.displot(iris['sepal_width'])

plt.show()
```

```{python}
iris['sepal_width'].skew()
```

```{python}
sns.histplot(iris['sepal_length'])

plt.show()
```

```{python}
sns.histplot(iris['sepal_width'])

plt.show()
```

```{python}
# Histogram kumulatif dari sepal width
sns.histplot(iris['sepal_width'], cumulative=True)

plt.show()
```

## Count Plot

```{python}
#tips dari seaborn
tips=sns.load_dataset('tips')
tips
```

___

```{python}
# Histogram kumulatif dari sepal width
sns.countplot(x='day', data=tips)

plt.show()
```

```{python}
# Histogram kumulatif dari sepal width
sns.countplot(x=tips['day'])

plt.show()
```

```{python}
# Histogram kumulatif dari sepal width
sns.countplot(x='sex', data=tips, palette='Accent', hue='sex')

plt.show()
```

```{python}
# Histogram kumulatif dari sepal width
sns.countplot(x='day', data=tips, palette='Blues', hue='sex')

plt.show()
```

```{python}
# Histogram kumulatif dari sepal width
sns.countplot(x='sex', data=tips, palette='Blues', hue='day')

plt.show()
```

```{python}
#Jika ingin mengammbar dalam sumbu vertikal ya y=
sns.countplot(y='day', data=tips, palette='Blues', hue='sex')

plt.show()
```

```{python}
sns.countplot(x='sex', data=tips, hue='smoker')

plt.show()
```

```{python}
sns.countplot(x='smoker', data=tips, hue='sex')

plt.show()
```

## Heatmap

```{python}
iris.drop('species', axis=1, inplace=True)
iris
```

___

```{python}
korelasi_iris = iris.corr()
korelasi_iris
```

```{python}
sns.heatmap(iris.corr())

plt.show()
```

```{python}
sns.heatmap(iris.corr(), cmap='YlGnBu')

plt.show()
```

```{python}
sns.heatmap(iris.corr(), cmap='YlGnBu')

plt.xticks(rotation=45)

plt.show()
```

```{python}
sns.heatmap(iris.corr(), cmap='YlGnBu')

plt.yticks(rotation=45)

plt.show()
```

```{python}
sns.heatmap(iris.corr(), cmap='YlGnBu')

plt.xticks(rotation=45)

plt.yticks(rotation=45)

plt.show()
```

```{python}
sns.heatmap(korelasi_iris[(korelasi_iris >= 0.5)])

plt.show()
```

```{python}
sns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)])

plt.show()
```

```{python}
sns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)], annot = True)

plt.show()
```

```{python}
sns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2)], annot = True, cmap='Blues')

plt.show()
```

```{python}
sns.heatmap(korelasi_iris[(korelasi_iris >= 0.5) | (korelasi_iris <= -0.2) ], annot = True, cmap = 'Blues', linewidth = 1, linecolor = 'black')

plt.show()
```

## Scatter Plot

```{python}
iris = sns.load_dataset('iris')
iris
```
___

```{python}
sns.scatterplot(x='sepal_length', y='sepal_width', data=iris, palette='Accent_r', hue='species')

plt.show()
```

```{python}
sns.regplot(x='sepal_length', y='sepal_width', data=iris)

plt.show()
```

```{python}
sns.regplot(x='petal_length', y='petal_width', data=iris)

plt.show()
```

```{python}
iris['petal_length'].corr(iris['petal_width'])
```

## Box Plot

```{python}
sns.boxplot(x='petal_length', data=iris)

plt.show()
```

```{python}
sns.boxplot(x='sepal_width', data=iris)

plt.show()
```

```{python}
# | eval: false
?sns.countplot
```