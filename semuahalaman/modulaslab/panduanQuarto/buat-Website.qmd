---
title: "🖋️ Dasar Lengkap buat website di Quarto"
description: >
  Panduan praktis untuk mahasiswa dan asisten laboratorium pemula di bidang matematika, statistika, dan aktuaria
  yang ingin membuat website atau dokumentasi online secara gratis menggunakan Quarto dan GitHub Pages.
  Tidak perlu pengalaman pemrograman.
keywords: 
  - panduan membuat website dari nol
  - quarto website pemula
  - github pages untuk mahasiswa
  - dokumentasi lab asisten
  - markdown dan YAML dasar
  - blog mahasiswa statistika aktuaria
  - dokumentasi praktikum
  - personal site untuk asisten lab
  - publikasi ilmiah mahasiswa
  - website gratis tanpa coding
format:
  html:
    toc: true
    toc-title: "Daftar Isi"
    toc-location: left
    toc-depth: 4
    number-sections: false
    theme: cosmo
    code-fold: true
---


# 📚 Pendahuluan {#pendahuluan}

Mahasiswa tingkat awal dan asisten laboratorium baru di bidang matematika, statistika, dan aktuaria sering kali dihadapkan pada kebutuhan mendokumentasikan kegiatan, membuat catatan, atau membangun portofolio digital. Sayangnya, membuat website terdengar seperti sesuatu yang rumit, memerlukan keahlian pemrograman, atau biaya mahal untuk hosting.

Panduan ini dirancang untuk membantumu membuat website secara gratis menggunakan **Quarto** dan **GitHub Pages**, tanpa harus jago coding. Kamu akan belajar langkah demi langkah mulai dari instalasi, penulisan konten dengan Markdown, pengaturan tampilan, hingga publikasi. Semua dijelaskan secara modular, visual, dan cocok dipelajari di sela-sela aktivitas kuliah atau laboratorium.

Dengan mengikuti panduan ini, kamu bisa membangun blog belajar, dokumentasi praktikum, portofolio akademik, hingga situs publikasi ilmiah dengan cara yang rapi, profesional, dan mudah diakses.

**📑 Daftar Isi**

1. [📄 Membuat Website](#buat-website)
2. [🧭 Navigasi Website](#Website-Navigation)

---

# 1. 📄 Membuat Website {#buat-website}

## 1.1 🧭 Gambaran Ikhtisar

Quarto Websites adalah cara yang nyaman untuk mempublikasikan kumpulan dokumen 📄. Dokumen-dokumen ini dipublikasikan sebagai bagian dari sebuah website 🌐 yang berbagi elemen navigasi, opsi rendering, dan gaya visual 🎨.

Navigasi website bisa ditampilkan lewat **navbar global 🧱, sidebar dengan tautan** 🧾, atau kombinasi keduanya untuk situs dengan banyak tingkat konten 📚. Kamu juga bisa menyalakan fitur 🔍 *full text search* untuk memudahkan pencarian.

Website Quarto bisa dipublikasikan ke berbagai platform seperti **GitHub Pages, Netlify, Posit Connect**, atau **server web statis dan intranet** 🚀. Lihat dokumentasi lengkapnya di [Publishing Websites](https://quarto.org/docs/publishing/).

## 1.2 ⚡ Quick Start

Ikuti panduan Quick Start sesuai alat yang kamu pakai 🛠️ agar website kamu langsung bisa jalan. Setelah paham dasarnya, lanjutkan untuk mempelajari fitur-fitur lanjutan 🔍.

::: {.panel-tabset group="tools-tabset"}

### 💻 VS Code

Untuk membuat proyek website baru di **VS Code**:

1. Jalankan perintah **Quarto: Create Project** lewat *Command Palette*.

![](https://quarto.org/docs/websites/images/vscode-create-project-command.png){.border fig-alt="membuka command pallete di VS Code dengan ctrl + shift + p"}

2. Pilih opsi **Website Project** 🌍.

![](https://quarto.org/docs/websites/images/vscode-create-project-website.png){.border fig-alt="pilih opsi website project setelah memilih create project quarto sebelumnya"}

3. Pilih direktori induk dan beri nama direktori proyekmu 📂.

![](https://quarto.org/docs/websites/images/vscode-create-project-directory.png){.border fig-alt="gambar menunjukkan kolom memberikan nama proyek direktori"}

Lalu, tekan tombol **Preview** ▶️ untuk melihat hasilnya secara langsung di jendela preview. Saat kamu *re-render* file seperti `index.qmd` atau `about.qmd`, preview akan otomatis diperbarui 🔁.

![](https://quarto.org/docs/websites/images/vscode-create-project-render.png){.border fig-alt="gambar menunjukkan tombol preview untuk melihat sementara website buatan pemogram"}

Preview ini akan menunjukkan tepat ke sumber file. Ketika re-render `index.qmd` atau render files lainnya seperti `about.qmd`, preview otomatis diperbarui.

### 📊 RStudio

Untuk membuat proyek website di RStudio:

1. Gunakan menu **New Project** dan pilih **Quarto Website** 🆕.

:::{layout-ncol="2"}

![](https://quarto.org/docs/websites/images/rstudio-project-new-directory.png){.border}

![](https://quarto.org/docs/websites/images/rstudio-project-website.png){.border}
:::

2. Isi nama direktori dan opsi lainnya, lalu klik **Create Project**.

![](https://quarto.org/docs/websites/images/rstudio-project-website-options.png){.border fig-alt="Sebuah bagian dari 'New Project Wizard' menu dari Rstudio. Bagian ini diberi judul Panduan 'Membuat website Quarto dari Nol'. Logo quarto ditampilkan di sebelah kiri. Di sebelah kanan adalah tempat untuk 'Nama Direktori' ('Directory name') dan 'Create project as subdirectory of:'. Dibawah opsi 'Engine' di set ke 'None'. Dibawah opsi 'Create a git repository', dan 'Use visual markdown editor'. Ada tombol untuk 'Create Project' dan 'Cancel' disusun samping-samping di bawah kanan window. Ada opsi 'Open in new session' di tombol sudut kiri."}

Gunakan tombol **Render** ▶️ untuk melihat preview websitemu langsung di RStudio.

![](https://quarto.org/docs/websites/images/rstudio-project-website-preview.png)

Preview ini akan menunjukkan tepat ke sumber file. Ketika re-render `index.qmd` atau render files lainnya seperti `about.qmd`, preview otomatis diperbarui.

### 🖥️ Terminal

Untuk membuat project website baru dari Terminal, gunakan `quarto create project` command, diikuti prompt untuk memiliki tipe dan memberi nama untuk projek tersebut (yang akan digunakan untuk nama direktori tersebut):

```{.bash filename="Terminal"}
quarto create project website mysite
```

Ini akan membuat panggung untuk website sederhana di dalam `mysite` sub-directory. Gunakan `quarto preview` command untuk render dan preview website:

```{.bash filename="Terminal"}
quarto preview mysite
```

Website akan dibuka di browser 🌐 dan akan otomatis ter-update saat kamu menyimpan perubahan. Ketika kamu edit dan simpan `index.qmd` (atau file lain seperti `about.qmd`) preview  ini otomatis diperbarui.

:::

## 1.3 🔄 Alur Kerja (Workflow)

Setelah memahami cara membuat dan mengedit website sederhana, sekarang saatnya mempelajari alur kerja yang lebih dalam 🔧.

---

### 1.3.1 ⚙️ File Konfigurasi `_quarto.yml`

Semua pengaturan website dikontrol lewat file `_quarto.yml`. Contoh konfigurasi sederhana:

```{.yaml filename="_quarto.yml"}
project:
  type: website

website:
  title: "today"
  navbar:
    left:
      - href: index.qmd
        text: Home
      - about.qmd

format:
  html:
    theme: cosmo
    css: styles.css
    toc: true
```

📚 Lihat dokumentasi [Navigasi Website](https://quarto.org/docs/output-formats/html-basics.html) untuk info lebih lanjut.

---

### 1.3.2 👀 Preview Website

Di VS Code dan RStudio, kamu bisa klik tombol **Preview** atau **Render** untuk menjalankan `quarto preview` langsung di jendela editor. Atau, jalankan lewat terminal:

``` {.bash filename="Terminal"}
# preview the website in the current directory
quarto preview
```

💡 Perhatikan bahwa ketika preview sebuah site (entah gunakan VS Code / RStudio alat terintegrasi atau dari terminal)  perubahan file configurasi (yakni `_quarto.yml`) sebagai sumber data situs (yakni thema atau file CSS) akan secara otomatis memperbaharui website.

Kamu dapat mengkustomisasi perilaku bagaimana server preview (port, apakah di buka di browser terbuka dll.) gunakan opsi command line atau `_quarto.yml` file config. Lihat `quarto preview help` atau [project file reference](https://quarto.org/docs/reference/projects/options.html#preview) untuk detail tambahan.


::: callout-important
⚠️ Perubahan besar seperti pada `_quarto.yml` butuh re-render penuh sebelum kamu *deploy*. Selalu jalankan `quarto render` sebelum menerbitkan websitemu.
:::

---

### 1.3.3 🏗️ Render Website

Untuk merender tanpa preview, jalankan:

``` {.bash filename="Terminal"}
# merender website dalam direktori ini
quarto render 
```

Website akan dihasilkan (secara default) di folder `_site` 📁.

Lihat artikel [Project Basics](https://quarto.org/docs/projects/quarto-projects.html) untuk mempelajari lebih tentang pekerjaan terkait dengan projects, termasuk secara spesifik list eksplisit file untuk dirender, sebagaimana tambahan custom pre dan post render scripts untuk project kamu.

{{< include _render-targets.md >}}

---

## 1.4 🔗 Linking antar Halaman

Ketika membuat link di antara halaman site kamu, kamu dapat memberikan sumber file sebagai target link (daripada `.html` file). kamu juga dapat memberikan identifier hash (tanda pagar `#)` ke sumber file jika kamu ingin ke link bagian secara khusus di dokumen. Misalnya:

``` markdown
[about](about.qmd)
[about](about.qmd#section)
```

Salah satu keuntungan dari penggunaan style ini dari link mengarah ke targeting `.html` files secara langsung itu jika kamu pada titik tertentu ingin mengubah website ke [buku](https://quarto.org/docs/books/) dasar file ini akan menautkan secara otomatis ke bagian link untuk format yang menghasilkan single file (misalnya PDF atau MS Word).

---

## 1.5 🎨 Tema Website

Tampilan website mu dikontrol via [HTML themes](https://quarto.org/docs/output-formats/html-themes.html). Opsi ini telah diatur dibawah opsi `format` dalam website configuration file mu:

```{.yaml filename="_quarto.yml"}
format:
  html:
    theme: cosmo
    css: styles.css
```

Lihat [HTML Theming](https://quarto.org/docs/output-formats/html-themes.html) untuk eksplorasi tema lebih lanjut.

---

## 📚 Pelajari Lebih Lanjut

Begitu websitemu sudah jalan, kamu bisa:

- [🔗 Tambahkan navigasi: Website Navigation](#Website-Navigation) mendeskripsikan berbagai cara untuk menambahkan navigasi ke website, termasuk bar navigasi tingkat tinggi, sidebar atau menggunakan kedua desain hybrid. Bagian ini juga meliputi penambahan pencarian full-text dan juga footer situs yang lebar.

- [🧰 Tambahkan fitur sosial & analytics: Website Tools](https://quarto.org/docs/websites/website-tools.html) meliputi penambahan metadata social (seperti kartu twitter) dan analitik Google untuk situsmu, sebagaimana pengguna memverifikasi toggle di antara skema warna terang dan gelap.

- [⚙️ Kustomisasi opsi website: Website Options](https://quarto.org/docs/reference/projects/websites.html) menyajikan referensi komprehensif kepada semua opsi website yang tersedia.

- [🧮 Optimalkan eksekusi kode: Code Execution](https://quarto.org/docs/projects/code-execution.html) menyajikan tips untuk optimisasi merender website dengan banyak dokumen atau komputasi yang mahal.

- [🚀 Publikasikan websitemu: Publishing Websites](https://quarto.org/docs/publishing/) menyebutkan berbagai opsi untuk menerbitkan situs web termasuk Halaman GitHub, Netlify, dan Posit Connect.

# 2. 🧭 Navigasi Website {#Website-Navigation}
## 2.1 😗 Gambaran Ikhtisar

Ada berbagai opsi yang tersedia untuk menyediakan navigasi situs web, termasuk:

-   Menggunakan navigasi atas (navbar) dengan sub-menu opsional.📌

-   Menggunakan navigasi samping dengan hierarki halaman.📑

-   Menggabungkan navigasi atas dan samping (di mana navigasi atas menautkan ke berbagai bagian situs dengan navigasi sampingnya sendiri).🔀

Selain itu, kamu dapat menambahkan pencarian teks lengkap ke antarmuka navigasi atas atau samping.

## 2.2 😁 Top Navigation

Untuk menambahkan navigasi teratas ke situs web, tambahkan entri `navbar` ke konfigurasi ``website` di `_quarto.yml`. Misalnya, YAML berikut:

```{.markdown filename="yaml"}
website:
  navbar:
    background: primary
    search: true
    left:
      - text: "Home"
        href: index.qmd
      - talks.qmd
      - about.qmd
```

Menghasilkan bilah navigasi yang terlihat seperti ini:

![](https://quarto.org/docs/websites/images/nav-bar.png){fig-alt="Bilah navigasi. Judul 'My Site' ada di sebelah kiri. Di sebelah kanan judul terdapat kata 'Home', 'Talks', dan 'About'. 'Home' sedikit lebih ringan dari dua kata lainnya. Di sisi paling kanan bilah navigasi adalah kotak pencarian."}

Di atas kami menggunakan opsi ` kiri` untuk menentukan item untuk sisi kiri bilah navigasi. kamu juga dapat menggunakan opsi `kanan` untuk menentukan item untuk sisi kanan.

Teks untuk item bilah navigasi akan diambil dari judul dokumen target yang mendasarinya. Perhatikan bahwa dalam contoh di atas kami menyediakan nilai `text: "Home"` khusus untuk `index.qmd`.

kamu juga dapat membuat menu bilah navigasi dengan menyertakan `menu` (yang merupakan daftar item seperti `kiri` dan `kanan)`.

Contoh lainnya bisa dibuat menarik seperti berikut:

```{.markdown filename="yaml"}
project:
  type: website

website:
  title: "My Site"
  navbar:
    search: true
    left:
      - href: index.qmd
        text: Home 🏠
      - about.qmd
      - text: Blog ✍️
        menu:
          - href: blog/post1.qmd
            text: Post 1
          - href: blog/post2.qmd
            text: Post 2
  sidebar:
    style: floating
    contents:
      - section: "Tutorial"
        contents:
          - href: intro.qmd
            text: Pengenalan 📘
          - href: dasar.qmd
            text: Dasar-Dasar ⚙️

```

Kamu juga bisa membuat menu dropdown di `navbar` dengan `menu:` seperti contoh `Blog` di atas 🧺.

Misalnya:

```{.markdown filename="yaml"}
left:
  - text: "More"
    menu:
      - talks.qmd
      - about.qmd 
```

Berikut adalah semua opsi yang tersedia untuk navigasi teratas ( **Top Navigation** ):

| Opsi              | Deskripsi                                                                                                                                                                                                                              |
|-------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `title`           | Judul navbar (menggunakan `site: title` jika tidak ada yang ditentukan). Gunakan `title: false` untuk menekan tampilan judul di bilah navigasi.                                                                                        |
| `logo`            | Gambar logo yang akan ditampilkan di sebelah kiri judul.                                                                                                                                                                               |
| `logo-alt`        | Teks alternatif untuk gambar logo.                                                                                                                                                                                                     |
| `logo-href`       | Targetkan href dari logo /title navbar. Secara default, logo dan tautan judul ke halaman root situs (`/index.html`).                                                                                                                   |
| `background`      | Warna Latar Belakang ("primary", "secondary", "success", "danger", "warning", "info", "light", "dark", or hex color).                                                                                                                  |
| `foreground`      | Warna latar depan ("primary", "secondary", "success", "danger", "warning", "info", "light", "dark", or hex color). Warna latar depan akan digunakan untuk mewarnai elemen navigasi, teks, dan tautan yang muncul di bilah navigasi.    |
| `search`          | Sertakan kotak pencarian (true or false).                                                                                                                                                                                              |
| `tools`           | Daftar alat navbar (seperti link ke github atau twitter, dll.). Lihat [Navbar Tools](#navbar-tools) untuk detail.                                                                                                                      |
| `left` / `right`  | Daftar item navigasi untuk sisi kiri dan kanan navbar.                                                                                                                                                                                 |
| `pinned`          | Selalu tampilkan bilah navigasi (true or false). Defaults ke false, dan menggunakan [headroom.js](https://wicky.nillia.ms/headroom.js/) untuk menampilkan bilah navigasi secara otomatis saat pengguna menggulir ke atas pada halaman. |
| `collapse`        | Menciutkan item navbar ke dalam menu hamburger saat tampilan menjadi sempit (defaults ke true).                                                                                                                                        |
| `collapse-below`  | Breakpoint responsif untuk menciutkan item navbar ke menu hamburger ("sm", "md", "lg", "xl", or "xxl", defaults ke "lg").                                                                                                              |
| `toggle-position` | Posisi menu hamburger navbar yang diciutkan saat dalam mode responsif ("left" or "right", defaults ke "left").                                                                                                                         |
| `tools-collapse`  | Perkecil alat ke dalam menu navbar saat tampilan menjadi sempit.                                                                                                                                                                       |

Berikut adalah opsi yang tersedia untuk item **navigasi individual**:

| Opsi         | Deskripsi                                                                                                                                    |
|--------------|----------------------------------------------------------------------------------------------------------------------------------------------|
| `href`       | Tautkan ke file yang berisi proyek atau URL eksternal.                                                                                       |
| `text`       | Teks yang akan ditampilkan untuk item navigasi (default ke `title` dokumen jika tidak disediakan).                                           |
| `icon`       | Nama salah satu standar [Bootstrap 5 icons](https://icons.getbootstrap.com/) (misalnya "github", "twitter", "share", dll.).                  |
| `aria-label` | [Accessible label](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label) untuk item navigasi.               |
| `rel`        | Nilai untuk [rel](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel) atribut. Beberapa nilai yang dipisahkan spasi diizinkan. |
| `target`     | Nilai untuk [target](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target) atribut. Misalnya `_blank` untuk buka di tab baru.  |
| `menu`       | Daftar item navigasi untuk mengisi menu tarik-turun.                                                                                         |

: {tbl-colwidths="30,70"}

Untuk informasi selengkapnya tentang mengontrol tampilan bilah navigasi menggunakan tema HTML, lihat [HTML Themes - Navigation](https://quarto.org/docs/output-formats/html-themes.html#navigation).

---

### ⛏️ Navbar Tools {#navbar-tools}

{{< include _require-1.3.qmd >}}

Selain navigasi tradisional, navbar juga dapat menampilkan seperangkat alat (misalnya social actions, GitHub view atau edit actions dll.) Definisi alat terdiri dari nama ikon dan href untuk diikuti saat diklik. Untuk ikon, gunakan nama ikon dari salah satu dari 1.300+ Ikon Bootstrap.

Contoh:

::: {layout="[60,40]"}
``` yaml
website:
  navbar:
    tools:
      - icon: twitter
        href: https://twitter.com
      - icon: github
        menu:
          - text: Source Code
            href:  https://code.com
          - text: Report a Bug
            href:  https://bugs.com
```

![](https://quarto.org/docs/websites/images/navbar-tools.png){.border alt="Bagian kanan navbar Kuarto berisi logo Twitter dan Github. Logo Github dipilih dan ada menu di bawahnya dengan dua item: 'Kode Sumber' dan 'Laporkan Bug'"}
:::

Alat yang ditentukan untuk bilah navigasi akan muncul di sisi kanan Bilah Navigasi. Jika kamu menentukan tema gelap atau mode pembaca untuk situs web kamu, kontrol untuk opsi tersebut akan muncul dengan alat apa pun yang ditentukan.

Saat bilah navigasi diciutkan menjadi menu di layar yang lebih kecil, alat akan ditempatkan di bagian bawah menu.

## 2.3 📑 Side Navigation {#side-navigation}

Jika situs kamu terdiri dari lebih dari beberapa dokumen. Maka kamu mungkin lebih suka menggunakan navigasi samping, yang memungkinkan kamu menampilkan hierarki artikel yang sangat dalam.

Jika kamu membaca halaman ini di perangkat desktop. Maka kamu akan melihat tampilan navigasi sisi default di sebelah kiri (jika tidak, kamu akan melihat bilah judul di bagian atas yang dapat kamu klik atau sentuh untuk membuka navigasi).

Untuk menambahkan navigasi samping ke situs web, tambahkan entri `sidebar` ke bagian `website`di `_quarto.yml`. Misalnya:

```{.markdown filename="yaml"}
website:
  sidebar:
    style: "docked"
    search: true
    contents:
      - text: "Introduction"
        href: introduction.qmd
      - section: "Basics"
        href: basics-summary.qmd
        contents:
          - index.qmd
          - basics-knitr.qmd
          - basics-jupyter.qmd
      - section: "Layout"
        contents:
          - layout.qmd
          - layout-knitr.qmd
          - layout-jupyter.qmd
      - section: advanced.qmd
        contents:
          - raw-code.qmd
          - custom-theme.qmd
      - acknowlegment.qmd
```

Ada dua gaya navigasi samping yang tersedia: "docked" yang menampilkan navigasi di bilah sisi dengan warna latar belakang yang berbeda, dan "floating" yang menempatkannya lebih dekat ke teks isi utama. Seperti inilah tampilan gaya "docked" dan "floating" (masing-masing):

::: column-screen-inset-shaded
|                                                                                                                                                                                                                                                                                            |                                                                                                                                                         |
|:--------------------------------------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------------:|
| ![](https://quarto.org/docs/websites/images/nav-side-anchored.png){.preview-image fig-alt="Tangkapan layar dokumen Quarto dengan bilah sisi berwarna abu-abu."} | ![](https://quarto.org/docs/websites/images/nav-side-floating.png){fit-alt="Tangkapan layar dokumen Quarto di mana bilah sisi memiliki latar belakang putih dan lebih dekat ke isi teks."} |
:::

Berikut adalah semua opsi yang tersedia untuk navigasi samping ( **side Navigation** ):

|       Opsi       |                                                                                Deskripsi                                                                                |
|------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `id`             | ID opsional (dipakai hanya untuk navigasi hybrid, dijelaskan nanti) 🆔.                                                                                                  |
| `title`          | Judul *sidebar* 📝. Kalau tidak diisi, akan pakai title dari project secara otomatis.                                                                                      |
| `logo`           | Gambar logo opsional 🖼️.                                                                                                                                                 |
| `logo-alt`       | Teks alternatif untuk gambar logo (buat aksesibilitas dan *SEO*) 🔤.                                                                                                       |
| `logo-href`      | Link tujuan saat logo diklik 🔗. Secara default akan diarahkan ke halaman utama (`/index.html`).                                                                           |
| `search`         | Tampilkan kotak pencarian 🔍. Kalau `true`, sidebar akan punya fitur pencarian (kecuali sudah ada di navbar).                                                              |
| `tools`          | Daftar *tools* tambahan 🛠️ (contoh: link ke `GitHub`, `Twitter`, dll – lihat bagian berikutnya).                                                                               |
| `contents`       | Daftar isi navigasi yang mau ditampilkan 📚. Biasanya berisi daftar halaman utama dan sub-halaman.                                                                       |
| `style`          | Gaya tampilan sidebar: `docked` 📌 (menempel) atau `floating` 🧭 (melayang).                                                                                                  |
| `type`           | Warna tema sidebar: `dark` 🌑 atau `light` ☀️. Ini hanya sebagai petunjuk, warnanya bisa disesuaikan.                                                                         |
| `background`     | Warna latar belakang 🎨. Pilihannya: "`none`", "`primary`", "`secondary`", "`success`", "`warning`", "`info`", "`light`", "`dark`", "`white`". Default: "`light`".                           |
| `foreground`     | Warna teks dan elemen di *sidebar* ✏️. Bisa pilih nama warna atau kode **hex**.                                                                                                |
| `border`         | Tampilkan garis tepi di *sidebar* atau tidak? 📏 Gunakan `true` atau `false`.                                                                                                  |
| `alignment`      | Posisi teks/isi sidebar: `left` ↖️, `right` ↘️, atau `center` 🎯.                                                                                                                |
| `collapse-level` | Level kedalaman menu yang ditampilkan langsung (sisanya disembunyikan/di-*collapse*) 📂. Default: 2.                                                                       |
| `pinned`         | Selalu tampilkan tombol judul yang bisa membuka sidebar di layar sempit 📱. Default-nya `false` dan akan muncul otomatis saat pengguna scroll ke atas (pakai `headroom.js`). |

---

### 📚 Cara Kerja sidebar di Quarto
Satu item `sidebar` tanpa `id` atau `title` akan berlaku untuk semua halaman di situs kamu 🌐.
Tapi kalau `sidebar` punya `id` atau `title`, maka sidebar itu hanya berlaku untuk **halaman-halaman tertentu**, yaitu:

- Halaman yang **terdaftar di `contents` ** sidebar tersebut 📄

- Atau halaman yang **secara eksplisit menyebutkan `id` sidebar-nya** 🏷️

---

### 📌 Cara Menentukan Sidebar Khusus untuk Halaman Tertentu
Kalau kamu ingin pakai sidebar tertentu hanya di satu halaman (atau sekelompok halaman), kamu tinggal menambahkan `id` sidebar ke bagian **front matter** halaman tersebut, atau ke file `_metadata.yml` 🛠️

Misalnya, kalau sidebar kamu punya:

```{.markdown filename="yaml"}
id: tutorials
```

Lalu kamu ingin sidebar ini tampil di halaman tertentu, tambahkan ini di `front matter` halaman tersebut:

```{.markdown filename="yaml"}
sidebar: tutorials
```

---

### 🎨 Kustomisasi Tampilan Sidebar
Untuk mengatur tampilan sidebar lewat tema HTML, baca bagian [HTML Themes - Navigation](https://quarto.org/docs/output-formats/html-themes.html#navigation).

Kalau kamu ingin mengatur lebar sidebar, cek bagian [Page Layout - Grid Customization 📏](https://quarto.org/docs/output-formats/page-layout.html#grid-customization).


## 2.4 ⚙️ Pembuatan Navigasi Sidebar Otomatis
Sebelumnya, kita sudah bahas cara **mengisi `contents` ** sidebar secara manual dengan daftar navigasi. Nah, Quarto juga mendukung **pembuatan sidebar otomatis** berdasarkan struktur folder dan file di proyek kamu 📁✨

Cara termudah adalah dengan menulis:
```{.markdown filename="yaml"}
sidebar:
  contents: auto
```

🧭 Jika kamu menulis `contents: auto` di level root, maka **semua dokumen di situs kamu akan otomatis masuk ke sidebar** (kecuali halaman utama — halaman utama tetap bisa diakses lewat tautan judul di atas).

---

### 🔍 Aturan Pembentukan Navigasi Otomatis
Navigasi otomatis akan dibentuk dengan aturan berikut:

1. 🏷 **Judul item** diambil dari kolom `title` di metadata file `.qmd` atau `.ipynb`.

2. 📂 **Folder** akan membentuk **section** tersendiri, dengan judul otomatis berdasarkan nama folder (huruf besar diawal, tanda strip dan underscore diganti spasi).
➕ Kalau kamu ingin judul section yang lebih rapi, cukup tambahkan file `index.qmd` di dalam folder, lalu isi `title` di metadata-nya.

3. 🔤 Urutan file ditentukan secara alfabet berdasarkan nama file — kecuali jika kamu memberi nilai numerik `order` di metadata masing-masing file.

---

### 🧹 Hanya Isi dari Folder Utama (Tanpa Subfolder)
Secara default, sidebar otomatis akan **ikut menyertakan isi dari subfolder**. Tapi kalau kamu hanya ingin dokumen di folder utama saja, tuliskan seperti ini:

```{.markdown filename="yaml"}
sidebar:
  contents: /*
```

---

### 🎯 Menentukan Folder atau Pola File Tertentu
Daripada menyertakan semua file, kamu juga bisa menentukan folder tertentu atau menggunakan **pola file (glob pattern)**. Berikut ini contoh yang sah:
```{.markdown filename="yaml"}
sidebar:
  contents: reports        # semua isi dalam folder "reports"

sidebar:
  contents: reports/*      # hanya isi langsung (tanpa subfolder) dari "reports"

sidebar:
  contents: "*.ipynb"      # hanya file Jupyter Notebook di folder utama
```

📌 **Catatan**: Kalau kamu memakai simbol `*` (asterisk), **wajib diberi tanda kutip** agar YAML bisa membacanya dengan benar.

---

### 🧱 Gabungkan dengan Navigasi Biasa
Sidebar otomatis juga bisa digabung dengan item sidebar manual lainnya. Misalnya, kamu ingin membuat section khusus Reports secara otomatis dari folder:

```{.markdown filename="yaml"}
sidebar:
  contents:
    - about.qmd
    - contributing.qmd
    - section: Reports
      contents: reports
```

Atau kamu ingin menyisipkan daftar otomatis di tengah-tengah daftar sidebar manual:

```{.markdown filename="yaml"}
sidebar:
  contents:
    - about.qmd
    - contributing.qmd
    - auto: "*-report.qmd"
```

⚠️ **Ingat lagi**: kalau ada simbol `*`, pastikan kamu **selalu pakai tanda kutip (" atau ')** supaya tidak error saat dibaca YAML.


## 2.5 🧰 Sidebar Tools (Alat Tambahan di Sidebar)
Selain untuk navigasi 🔽, sidebar di Quarto juga bisa menampilkan **alat-alat tambahan** seperti:

- Tautan ke media sosial 🌐

- Aksi ke GitHub: lihat kode sumber, laporkan bug 🐞

- Dan lainnya yang bisa kamu sesuaikan sesuai kebutuhan

### 🛠️ Cara Menambahkan Tools ke Sidebar
Setiap alat didefinisikan dengan dua hal:

1. `icon` — nama ikon dari [Bootstrap Icons](https://icons.getbootstrap.com) (ada lebih dari 1.300 ikon siap pakai!) 🎨

2. `href` — tautan tujuan saat ikon diklik 🔗

Contoh implementasi dalam YAML:

::: {layout="[60,40]"}
```{.markdown filename="yaml"}
website:
  sidebar:
    tools:
      - icon: twitter
        href: https://twitter.com
      - icon: github
        menu:
          - text: Source Code
            href:  https://code.com
          - text: Report a Bug
            href:  https://bugs.com
```

![](https://quarto.org/docs/websites/images/tools.png){fit-alt="Bagian atas sidebar Quarto yang menampilkan ikon Twitter dan GitHub. Ikon GitHub aktif dan memperlihatkan dua menu: `Source Code` dan `Report a Bug`"}

:::

📌 Pada contoh di atas:

- Ikon Twitter langsung mengarah ke situs Twitter.

- Ikon GitHub punya menu dropdown dengan dua pilihan:
  - 🔹 `Source Code` → menuju halaman kode
  - 🔹 `Report a Bug` → menuju halaman pelaporan bug
  
## 2.6 🧭 Navigasi Hybrid (Gabungan)
Kalau situs kamu punya banyak halaman — bahkan sampai puluhan atau ratusan 📄📄📄 — maka **navigasi hybrid** adalah pilihan yang sangat membantu.
Dengan navigasi hybrid, kamu bisa:

- Menampilkan navigasi atas (navbar) untuk mengakses bagian-bagian besar dari situs (seperti *Tutorials*, *How-To*, dst) 🔝

- Menampilkan **navigasi samping (sidebar)** yang berbeda untuk setiap bagian 📚

---

### 🔗 Cara Menghubungkan Navbar dan Sidebar
Agar bisa menjalankan navigasi hybrid, kamu harus:

1. Membuat beberapa entri `sidebar:` di konfigurasi situs (masing-masing untuk bagian yang berbeda).

2. Menyocokkan `title:` dari `sidebar:` tersebut dengan entri di `navbar:`.

3. Menjadikan halaman yang ditautkan di `navbar:` sebagai item pertama di daftar `contents:` dalam `sidebar:`.

💡 Misalnya, kalau kamu mengikuti struktur dokumentasi [Diátaxis](https://diataxis.fr/) Framework, kamu mungkin akan punya bagian terpisah untuk:

- Tutorial 👨‍🏫

- How-To 💡

- Penjelasan dasar 📘

- Referensi 🗂️

---

![](https://quarto.org/docs/websites/images/nav-bar-hybrid.png){fig-alt="Bilah navigasi berjudul 'ProjectX' di sisi kiri. Di sebelah kanan judul terdapat item menu 'Home', 'Tutorials', 'How-To', 'Fundamentals', dan 'Reference'. Terdapat kolom pencarian di sisi paling kanan navbar."}

Kalau pengguna mengklik "Tutorials" di navbar, maka akan diarahkan ke halaman tutorial dengan navigasi sidebar khusus untuk tutorial.

![](https://quarto.org/docs/websites/images/nav-bar-hybrid-sidebar.png){fig-alt="Tampilan setelah memilih menu 'Tutorials'. Bilah navigasi atas tetap ditampilkan, dan di samping kiri muncul sidebar dengan item 'Tutorials', 'Tutorial 1', dan 'Tutorial 2'."}

---

#### 🧩 Contoh Konfigurasi YAML untuk Navigasi Hybrid
```{.markdown filename="yaml"}
website:
  title: ProjectX
  navbar:
    background: primary
    search: true
    left:
      - text: "Home"
        href: index.qmd
      - text: "Tutorials"
        href: tutorials.qmd
      - text: "How-To"
        href: howto.qmd
      - text: "Fundamentals"
        href: fundamentals.qmd
      - text: "Reference"
        href: reference.qmd

  sidebar:
    - title: "Tutorials"
      style: "docked"
      background: light
      contents:
        - tutorials.qmd
        - tutorial-1.qmd
        - tutorial-2.qmd

    - title: "How-To"
      contents:
        - howto.qmd

    - title: "Fundamentals"
      contents:
        - fundamentals.qmd

    - title: "Reference"
      contents:
        - reference.qmd
```

📝 Catatan: Sidebar pertama (`Tutorials`) punya beberapa pengaturan tambahan (`style`, `background`, dst), yang akan **diwarisi secara otomatis** oleh sidebar lain jika tidak ditentukan ulang.

---

### ⬇️ Alternatif: Sidebar dari Dropdown di Navbar
Kamu juga bisa membuat sidebar muncul sebagai dropdown di navbar — praktis untuk situs besar!

![](https://quarto.org/docs/websites/images/nav-bar-hybrid-dropdown.png){fig-alt="Navbar dengan item dropdown. Terdapat tanda panah kecil di samping item menu 'Tutorials', 'How-To', 'Fundamentals', dan 'Reference' yang menandakan bahwa item tersebut memiliki menu dropdown."}

Untuk ini, kamu perlu:

- Memberi `id`: unik pada setiap entri sidebar

- Mengacu pada `sidebar:id` tersebut di `navbar:`

---

#### 📄 Contoh YAML untuk Sidebar via Dropdown
```{.markdown filename="yaml"}
website:
  title: ProjectX
  navbar:
    background: primary
    search: true
    left:
      - text: "Home"
        href: index.qmd
      - sidebar: tutorials
      - sidebar: howto
      - sidebar: fundamentals
      - sidebar: reference

  sidebar:
    - id: tutorials
      title: "Tutorials"
      style: "docked"
      background: light
      collapse-level: 2
      contents: 
        # daftar navigasi untuk tutorial
        
    - id: howto
      title: "How-To"
      contents:
        # daftar navigasi untuk how-to
        
    - id: fundamentals
      title: "Fundamentals"
      contents:
        # daftar navigasi untuk dasar
        
    - id: reference
      title: "Reference"
      contents: 
        # daftar navigasi untuk referensi
```

::: callout-note
Jika sebuah halaman **tidak muncul di sidebar manapun**, maka secara default akan menampilkan **sidebar pertama yang tidak punya `id:` atau `title:`.**
Kalau kamu **tidak ingin sidebar muncul di suatu halaman**, tinggal tambahkan ini di bagian atas halaman tersebut:
```{.markdown filename="yaml"}
sidebar: false
```
:::

---

## 2.7 🧩 Navigasi Jejak Halaman (Breadcrumbs)
Secara **default**, Quarto akan menampilkan **breadcrumbs** (jejak halaman) di atas judul halaman 🧭 — tapi hanya untuk halaman yang **terletak lebih dalam dari satu level** dalam struktur navigasi sidebar.

Contoh struktur `sidebar:` berikut:
```{.markdown filename="yaml"}
website:
  sidebar:
    - contents:
      - section: "Tutorials"
        contents:
          - text: "Tutorial Landing"
            href: tutorials.qmd
```
Akan menghasilkan tampilan breadcrumbs seperti ini pada halaman `tutorials.html`:
![](https://quarto.org/docs/websites/images/nav-breadcrumbs.png){.border fig-alt="angkapan layar halaman web. Di atas judul 'Tutorials', terlihat teks tertaut: 'Tutorials > Tutorial Landing'." width=50%}

---

### 🚫 Menonaktifkan Breadcrumbs untuk Seluruh Website
Kalau kamu ingin breadcrumbs **tidak muncul sama sekali**, kamu bisa menonaktifkannya lewat file konfigurasi `_quarto.yml`:
```{.markdown filename="yaml"}
website:
  bread-crumbs: false
```

---

### 🚫 Menonaktifkan Breadcrumbs untuk Halaman Tertentu
Kamu juga bisa mematikan breadcrumbs hanya untuk **halaman tertentu** saja, cukup tambahkan opsi berikut di bagian *front matter* halaman tersebut:

```{.markdown filename="yaml"}
---
title: Halaman tanpa breadcrumbs
bread-crumbs: false
---
```

{{< include _page-navigation.md >}}

### ➗ Separator (Pemisah Navigasi)

Kalau kamu menyisipkan **garis pemisah** di sidebar (baik di antara bagian maupun item), maka kontrol navigasi halaman **tidak akan muncul** untuk melanjutkan ke bagian setelah pemisah itu. Misalnya, dalam sidebar berikut:

```{.markdown filename="yaml"}
website:
  sidebar:
    contents:
      - section: "First Section"
        contents:
          - href: document1.qmd
          - href: document2.qmd
          - href: document3.qmd
      - text: "---"
      - section: "Second Section"
        contents:
          - href: document4.qmd
          - href: document5.qmd
          - href: document6.qmd
```

Saat pengguna mencapai bagian bawah dari `document3.qmd`, mereka akan melihat tombol navigasi **sebelumnya** untuk kembali ke `document2.qmd`, tetapi **tidak akan melihat tombol berikutnya** untuk melanjutkan ke `document4.qmd`.

🧩 Perilaku ini berguna jika kamu memiliki bagian-bagian konten yang **tidak saling terhubung secara urutan**. Gunakan `separator` sebagai garis horizontal di sidebar untuk menandai bahwa urutan berhenti di sana dan pagination otomatis diputuskan.

## 2.9 🔝 Kembali ke Atas (Back to Top)

Kamu bisa menambahkan tautan **"Kembali ke atas"** di bagian bawah dokumen dalam situsmu dengan menggunakan opsi `back-to-top-navigation`.

```{.markdown filename="yaml"}
website:
  back-to-top-navigation: true
```

Catatan: Kamu juga bisa menonaktifkan fitur "Kembali ke atas" ini per halaman, dengan menambahkan `back-to-top-navigation: false` di bagian YAML halaman tersebut.

{{< include _footer.md >}}

## 2.11 🙈 Menyembunyikan Navigasi

Untuk halaman tertentu (terutama yang tata letaknya sepenuhnya kustom), kamu bisa **menyembunyikan navigasi** — baik itu `navbar`, `sidebar`, atau keduanya.

```{.markdown filename="yaml"}
# Hides the sidebar on this page
sidebar: false

# Hides the navbar on this page
navbar: false
```

- `sidebar: false` untuk menyembunyikan sidebar di halaman itu.
- `navbar: false` untuk menyembunyikan navbar di halaman itu.

## 2.12 📖 Mode Pembaca (Reader Mode)

Kalau kamu ingin pengguna dapat menyembunyikan navigasi samping dan daftar isi agar pengalaman membacanya lebih fokus 📚, kamu bisa mengaktifkan `reader-mode`.

Saat diaktifkan, akan muncul **tombol mode pembaca** di navbar (jika ada) atau di sidebar. Ketika ditekan, tombol ini akan menyembunyikan (roll-up) sidebar dan daftar isi.

![](https://quarto.org/docs/websites/images/reader-mode.png){fig-alt="Tombol mode pembaca muncul di navigasi atas halaman."}

```{.markdown filename="yaml"}
# Aktifkan reader-mode
website:
  reader-mode: true
```

## 2.13 🔎 Pencarian di Situs (Site Search)

Kamu bisa menambahkan fitur pencarian 🔍 di situs dengan menyisipkan `search: true` baik di `site-navbar` maupun `site-sidebar`. Contohnya sebagai berikut.

```{.markdown filename="yaml"}
website:
  sidebar:
    style: "docked"
    search: true
    contents:
      - section: "Basics"
        contents:
          - index.qmd
          - basics-jupyter.md
        # etc
```

## 2.14 🔗 Tautan GitHub

Kamu bisa menambahkan berbagai tautan ke repositori GitHub tempat kode sumber situsmu disimpan — misalnya untuk mengedit halaman ✍️, melihat sumber 📄, atau melaporkan masalah 🐛. Untuk melakukannya, tambahkan `repo-url` beserta satu atau lebih `repo-actions`.

```{.markdown filename="yaml"}
website:
  repo-url: https://github.com/quarto-dev/quarto-demo
  repo-actions: [edit, source, issue]
```

Tautan-tautan ini akan ditampilkan tepat di bawah daftar isi halaman 📑.

![](https://quarto.org/docs/websites/images/repo-actions.png){fig-alt="Tangkapan layar dari dokumen Quarto. Di bawah daftar isi halaman di sisi kanan, terdapat tiga opsi: 'Edit halaman ini', 'Lihat sumber', dan 'Laporkan masalah'. Ada ikon GitHub di sebelah kiri teks 'Edit halaman ini'."}

Kamu juga bisa menyesuaikan perilaku tautan ke repositori dengan opsi tambahan berikut 🛠️:

- `repo-subdir`: Subdirektori dalam repositori tempat file sumber berada (default-nya adalah root direktori).
- `repo-branch`: Cabang repositori yang memuat file sumber (default-nya `main`).
- `issue-url`: URL khusus untuk aksi ‘Report an Issue’.
- `repo-link-target`: Atribut `target` untuk tautan, misalnya `_blank` untuk membuka di tab/jendela baru.
- `repo-link-rel`: Atribut `rel` untuk tautan.

Jika kamu ingin menyembunyikan tautan GitHub hanya pada halaman tertentu, atur `repo-actions: false` di YAML dokumen tersebut.

```{.yaml filename="page.qmd"}
---
repo-actions: false
---
```


## 2.15 🔁 Redirect (Pengalihan Halaman)

Kalau kamu mengganti nama atau memindahkan suatu halaman di situsmu 🗂️, kamu bisa mengatur pengalihan dari URL lama ke yang baru, supaya tautan lama tidak rusak 🔗🚫.

Misalnya, kamu mengganti nama `page.qmd` menjadi `renamed-page.qmd`. Maka, kamu bisa menambahkan `aliases` ke halaman baru seperti ini:

```{.markdown filename="renamed-page.qmd"}
---
title: "Renamed Page"
aliases:
  - page.html
---
```

***📁 Pengalihan karena Reorganisasi Struktur Direktori***

Pengalihan juga berguna ketika kamu menyusun ulang konten di situsmu menjadi struktur direktori yang berbeda 🧱, atau saat kamu memecah satu artikel panjang menjadi beberapa bagian 📄➡️📄📄.

Untuk kasus reorganisasi ke dalam struktur direktori baru, kamu mungkin perlu menggunakan path absolut (dengan awalan `/`). Misalnya, jika kamu memindahkan file dari `/old-directory/index.md` ke `/new-directory/index.md`:

```{.markdown filename="/new-directory/index.md"}
---
title: "Halaman yang Disusun Ulang"
aliases: 
  - "/old-directory/index.html"
---
```

Hal ini juga berguna saat kamu mengatur ulang struktur direktori situs atau memecah artikel panjang menjadi beberapa bagian. Kamu bisa menambahkan URL hash (#) dari bagian yang sebelumnya berada dalam artikel lama, dan mengarahkannya ke halaman baru.

```{.markdown filename="learning-more.qmd"}
---
title: "Learning More"
aliases:
  - overview.html#learning-more
---
```

::: {.callout-tip title="💡 **Tips**"} 
Tergantung pada tempat kamu menyimpan situsnya, ada juga alat pengalihan (redirect) yang lebih kuat berdasarkan pola tertentu. Contohnya:


- Netlify dengan file [`_redirects`](https://docs.netlify.com/routing/redirects/)
- Apache dengan file [`.htaccess`](https://www.danielmorell.com/guides/htaccess-seo/redirects/introduction-to-redirects)

Coba cari dokumentasi dari penyedia hostingmu dengan kata kunci "redirects" 🔍.
:::

## 2.16 ❌ Halaman 404 {#pages-404}
Kalau browser nggak bisa menemukan halaman web yang diminta, maka akan muncul [error 404](https://id.wikipedia.org/wiki/HTTP_404) yang menandakan file-nya tidak ditemukan. Tampilan default 404 dari browser biasanya cukup 'kering' 🏜️, jadi kamu mungkin ingin membuat halaman kustom yang lebih ramah 😊 dan memberikan petunjuk agar pengguna bisa menemukan apa yang mereka cari.

Sebagian besar platform hosting website (seperti Netlify, GitHub Pages, dll) akan memakai file bernama `404.html` di root situs kamu sebagai halaman error kustom — kalau kamu menyediakannya.

Kamu bisa menyertakan halaman 404 kustom di situs Quarto dengan membuat file markdown bernama `404.qmd` di direktori utama proyek kamu.

```{.markdown filename="404.qmd"}
---
title: Page Not Found
---

The page you requested cannot be found (perhaps it was moved or renamed).

You may want to try searching to find the page's new location.
```

---

**📃 Catatan Penting!**
Kamu bisa menggunakan HTML barengan dengan markdown di file `404.qmd` agar tampilan dan layout-nya benar-benar sesuai keinginan.

Halaman 404 ini akan tetap muncul dalam kerangka tampilan situsmu (misalnya: font, CSS, layout, navigasi, dll). Tujuannya agar pengguna nggak merasa “keluar dari situsmu” sepenuhnya saat dapat error 404. Tapi kalau kamu *nggak* ingin perilaku seperti ini, maka sediakan `404.html` langsung, bukan `404.qmd`.

🔗 Berikut contoh halaman 404 keren dari berbagai website populer: <https://blog.fluidui.com/top-404-error-page-examples/>

---

### 📁 Jalur Situs Non-Root
Kalau situs kamu di-*deploy* dari root domain (misalnya `https://contoh.com/`), maka cukup dengan membuat file `404.qmd` seperti penjelasan di atas.

Tapi, kalau situs kamu *tidak* di-*deploy* dari root domain — misalnya `https://contoh.com/situsku/` — kamu perlu menambahkan konfigurasi ekstra supaya resource (seperti CSS situs kamu) bisa dimuat dengan benar di halaman 404.

```{.yaml filename="yaml"}
website:
  title: "Situs ku"
  site-path: "/situsku/"
```

---

🧭 Catatan Tambahan!
Kalau kamu sudah menyetel `site-url` (yang dibutuhkan untuk sitemap dan [pratinjau metadata sosial](https://quarto.org/docs/websites/website-tools.html#social-metadata)), kamu cukup memasukkan path situs langsung ke `site-url`.

```{.yaml filename="yaml"}
website:
  title: "Situs ku"
  site-url: "https://contoh.com/situsku/"
```

# 3. 📖 Fitur Blog di Quarto
## 3.1 📝 Gambaran Umum

Situs web Quarto punya dukungan bawaan untuk fitur blog. Blog terdiri dari kumpulan postingan ✍️ disertai halaman navigasi yang menampilkannya secara urut dari yang terbaru. Blog juga bisa punya halaman profil khusus, menerbitkan RSS feed 📡, dan menggunakan beragam tema keren 🎨.

Kamu bisa bikin:

- Situs web yang *hanya* berisi blog 📚
- Situs dengan beberapa blog 🧩
- Atau menambahkan blog ke situs yang punya konten lain 📦

## 3.2 ⚡ Mulai Cepat (Quick Start)

Ikuti langkah Mulai Cepat sesuai alat yang kamu gunakan untuk membuat blog sederhana yang langsung bisa jalan. Setelah memahami dasar-dasarnya, lanjut baca bagian berikutnya untuk fitur blog yang lebih canggih 🔧.

::: {.panel-tabset group="tools-tabset"}
### 💻 VS Code

Untuk membuat proyek blog baru di dalam VS Code:
1. Jalankan perintah **Quarto: Create Project** dari *command palette*.

![](https://quarto.org/docs/websites/images/vscode-create-project-command.png)

2. Pilih **Blog Project** dari daftar pilihan.

![](https://quarto.org/docs/websites/images/vscode-create-project-blog.png)

3. Tentukan direktori induk dan nama folder untuk proyek blog kamu.

![](https://quarto.org/docs/websites/images/vscode-create-project-directory.png)

4. Klik tombol **Preview** ▶️ untuk melihat pratinjau blog.

![](https://quarto.org/docs/websites/images/vscode-create-project-render-blog.png)

Preview akan otomatis diperbarui saat kamu menyimpan atau merender ulang `index.qmd` atau file lainnya seperti `about.qmd`.

### 📊 RStudio

Untuk membuat proyek blog baru di RStudio:

1. Gunakan perintah **New Project** & Pilih **Quarto Blog**

::: {layout-ncol="2"}

![](https://quarto.org/docs/websites/images/rstudio-project-new-directory.png){.border}

![](https://quarto.org/docs/websites/images/rstudio-project-blog.png)
:::


2. Masukkan nama folder dan pengaturan lain sesuai kebutuhan

![](https://quarto.org/docs/websites/images/rstudio-project-blog-options.png)

3. Klik tombol **Render** ▶️ untuk melihat pratinjau

![](https://quarto.org/docs/websites/images/rstudio-project-blog-preview.png)

Preview akan muncul di sisi kanan file sumber, dan otomatis diperbarui setiap kamu merender ulang `index.qmd` atau file lain seperti `about.qmd`.

### 🖥️ Terminal

Untuk membuat proyek blog dari Terminal:

``` {.bash filename="Terminal"}
quarto create project blog myblog
```

---

📂 Setelah membuat proyek blog dengan `quarto create`, struktur dasar blog akan disiapkan di folder tujuan. Kamu bisa menggunakan `quarto preview` untuk merender dan menampilkan blog di browser.

``` {.bash filename="Terminal"}
quarto preview myblog
```

Preview akan terbuka otomatis di browser 🧭 dan akan diperbarui setiap kamu menyimpan atau merender ulang file seperti `index.qmd` dan `about.qmd`.

:::

📁 Ringkasan File Proyek Blog

Berikut ini adalah ringkasan file penting yang dibuat saat kamu memulai proyek blog dengan template bawaan Quarto:

| File                  | Deskripsi 📄                         |
|:----------------------|:-------------------------------------|
| `_quarto.yml`         | File utama konfigurasi proyek Quarto |
| `index.qmd`           | Halaman utama blog 🏠                |
| `about.qmd`           | Halaman tentang penulis 📃           |
| `posts/`              | Folder berisi semua postingan 📂     |
| `posts/_metadata.yml` | Pengaturan bersama untuk postingan ⚙️ |
| `styles.css`          | CSS kustom untuk tampilan situs 🎨   |

🎯 Di bagian selanjutnya, kita akan bahas satu per satu komponen ini lebih dalam.

## 3.3 🏠 Halaman Utama Blog

Halaman utama blog kamu adalah **[listing page](https://quarto.org/docs/websites/website-listings.html)** — yaitu halaman daftar semua dokumen yang ada di folder `posts`. Postingan ditampilkan secara otomatis dalam urutan terbaru ke terlama 🕒:

![](https://quarto.org/docs/websites/images/myblog.png){.border fig-alt="Gambar menampilkan: Navbar berisi judul blog ('myblog') di kiri dan tautan 'About', ikon GitHub, ikon Twitter, serta ikon Search di kanan. Di bawahnya ada daftar postingan dengan judul, tag, deskripsi, dan preview yang diurutkan berdasarkan tanggal. Di sisi kanan tampak daftar kategori dan jumlah post tiap kategori."} 


🛠️ Ketika kamu membuat post baru, daftar ini akan otomatis diperbarui — post terbaru akan muncul di bagian paling atas.

:::{.callout-warning title="**Peringatan penting:**"}  
Sebaiknya jangan gunakan tanggal dinamis seperti `today` atau `last-modified` di post blog kamu. Ini akan mengacaukan urutan postingan di halaman utama dan RSS feed karena akan berubah setiap kali file dirender ulang.
:::

### 🏷️ Kategori di Halaman Blog

Halaman daftar post (listing page) bisa menampilkan kategori 📚 di sisi kanan halaman, yang membantu pembaca menjelajahi konten berdasarkan topik.

```{.yaml filename="yaml"}
---
title: "myblog"
listing:
  categories: true
---
```

Kategori ini diambil dari metadata (bagian depan) setiap dokumen yang ditampilkan. Misalnya, kamu bisa memberi label seperti `news`, `code`, atau `analysis` ke dalam satu post agar lebih mudah ditemukan 💡.

```{.yaml filename="yaml"}
---
title: "Post With Code"
description: "Post description"
author: "Fizz McPhee"
date: "5/22/2021"
categories:
  - news
  - code
  - analysis
---
```
Lihat artikel [Categories](https://quarto.org/docs/websites/website-listings.html#categories) untuk mempelajari lebih lanjut.

## 3.4 ℹ️ Halaman Tentang (About)

File `about.qmd` digunakan untuk memberikan informasi tambahan tentang blog kamu dan penulisnya ✍️. Misalnya, kamu bisa menampilkan foto profil, nama, deskripsi singkat, dan tautan ke media sosial seperti Twitter atau GitHub 🌐.

```{.markdown filename="about.qmd"}
---
title: "About"
image: profile.jpg
about:
  template: jolla
  links:
    - icon: twitter
      text: Twitter
      href: https://twitter.com
    # (additional links excluded for brevity)
---

## About this blog

This is the contents of the about page for my blog.
```

Kamu bisa menggunakan berbagai gaya tampilan (template) untuk halaman ini, salah satunya adalah template `jolla` yang tampak modern dan terstruktur rapi.

![](https://quarto.org/docs/websites/images/about-jolla.png){.border fig-alt="Screenshot halaman about dengan foto di tengah atas, nama besar, teks deskripsi, dan dua tombol untuk Twitter & GitHub."}

Untuk mempelajari lebih banyak pengaturan halaman About, lihat artikel [About Pages](https://quarto.org/docs/websites/website-about.html).

## 3.5 📂 Direktori Postingan

Semua konten blog kamu tersimpan dalam folder `posts`. Untuk menambah post baru, cukup buat sub-folder di dalam `posts/` lalu tambahkan file `index.qmd` di dalamnya. Post tersebut akan otomatis muncul di halaman utama setelah kamu render 🆕.

📌 Post terbaru akan muncul paling atas secara otomatis.

### 📝 Draft (Draf)

Kamu bisa menandai sebuah post sebagai *draf* jika belum siap dipublikasikan. Cukup tambahkan `draft: true` di metadata post.

```{.markdown filename="yaml"}
---
title: "My Post"
description: "Post description"
author: "Fizz McPhee"
date: "5/22/2021"
draft: true
---
```

📌 Post dengan status draft akan muncul saat kamu preview situs, tapi tidak akan muncul di hasil render akhir, listing, navigasi, peta situs, maupun fitur pencarian 🔒.

Untuk mempublikasikannya, cukup hapus `draft: true` lalu render ulang post-nya ✅.

```markdown
---
draft: true
---
```

### 📅 Pembaruan Terakhir (Last Updated)

Untuk menampilkan tanggal modifikasi terakhir tanpa mengubah tanggal publikasi asli, kamu bisa menambahkan `date-modified` di metadata post.

```{.markdown filename="yaml"}
---
title: "My Post"
description: "Post description"
author: "Fizz McPhee"
date: "5/22/2021"
date-modified: "5/23/2021"
---
```

Ini berguna agar pembaca tahu kapan konten terakhir diperbarui 🔄.

```markdown
---
date-modified: "5/23/2021"
---
```

### 🧊 Membekukan Hasil Eksekusi Post (Freezing Posts)

Kalau blog kamu punya post dengan kode program, mungkin akan sulit di-render di masa depan — misalnya karena paketnya sudah berubah ⚠️. Juga, post dengan perhitungan berat bisa bikin waktu render seluruh situs jadi lama 🐢.

Solusinya: [**freeze**](https://quarto.org/docs/projects/code-execution.html#freeze) hasil render post kamu. Saat kamu menggunakan `freeze: true`, hasil render disimpan dan tidak dihitung ulang tiap kali kamu render situs ⛔🖥️.

Ini membuat situs tetap stabil dan cepat, walaupun ada banyak post dengan kode dan analisis rumit. Kamu hanya perlu re-render post tersebut kalau memang perlu diubah.

📦 Default blog dari Quarto menyertakan file `_metadata.yml` di dalam folder `posts/` untuk menetapkan `freeze: true` ke semua post dalam folder itu secara otomatis.

#### 🗂️ Metadata Bersama di Blog Default

Pada blog default, Quarto menyertakan sebuah file bernama `_metadata.yml` yang berfungsi untuk menetapkan [metadata bersama](https://quarto.org/docs/projects/quarto-projects.html#shared-metadata) untuk semua dokumen di dalam folder `posts` 📄.

Di dalam file ini, kita bisa menentukan agar semua post secara default menggunakan `freeze: true` ❄️ — artinya hasil eksekusi kode akan disimpan dan tidak dihitung ulang saat situs dirender.

```markdown
# options apply to all posts in this folder
freeze: true
```
## 3.6 🎨 Tema Blog

Blog di Quarto bisa memakai salah satu dari 25 tema [Bootswatch](https://bootswatch.com/) yang sudah tersedia. Kamu juga bisa [membuat tema sendiri](https://quarto.org/docs/output-formats/html-themes.html#theme-options) jika ingin tampilan yang lebih personal 🧑‍🎨.

Secara default, proyek blog yang dibuat menggunakan `quarto create project` akan memakai tema [cosmo](https://bootswatch.com/cosmo/).

::: {layout="[40,60]"}
::: theme-list
Beberapa contoh tema yang bisa kamu pilih di antaranya:

-   [default](https://bootswatch.com/default/)
-   [cerulean](https://bootswatch.com/cerulean/)
-   [cosmo](https://bootswatch.com/cosmo/)
-   [cyborg 🌌](https://bootswatch.com/cyborg/)
-   [darkly 🌃](https://bootswatch.com/darkly/)
-   [flatly](https://bootswatch.com/flatly/)
-   [journal](https://bootswatch.com/journal/)
-   [litera 📖](https://bootswatch.com/litera/)
-   [lumen](https://bootswatch.com/lumen/)
-   [lux](https://bootswatch.com/lux/)
-   [materia](https://bootswatch.com/materia/)
-   [minty](https://bootswatch.com/minty/)
-   [morph 🌀](https://bootswatch.com/morph/)
-   [pulse](https://bootswatch.com/pulse/)
-   [quartz](https://bootswatch.com/quartz/)
-   [sandstone](https://bootswatch.com/sandstone/)
-   [simplex](https://bootswatch.com/simplex/)
-   [sketchy](https://bootswatch.com/sketchy/)
-   [slate](https://bootswatch.com/slate/)
-   [solar ☀️](https://bootswatch.com/solar/)
-   [spacelab](https://bootswatch.com/spacelab/)
-   [superhero](https://bootswatch.com/superhero/)
-   [united](https://bootswatch.com/united/)
-   [vapor ☁️](https://bootswatch.com/vapor/)
-   [yeti](https://bootswatch.com/yeti/)
-   [zephyr](https://bootswatch.com/zephyr/)
-   Dan masih banyak lagi!

:::
::: theme-thumbnails

**litera**

[![](https://quarto.org/docs/websites/images/theme-litera.png){style="border: solid silver 1px;" fig-alt="Screenshot of blog with litera theme."}](https://bootswatch.com/litera/)

**solar**

[![](https://quarto.org/docs/websites/images/theme-solar.png){style="border: solid silver 1px;" fig-alt="Screenshot of blog with solar theme."}](https://bootswatch.com/solar/)

**morph**

[![](https://quarto.org/docs/websites/images/theme-morph.png){style="border: solid silver 1px;" fig-alt="Screenshot of blog with morph theme."}](https://bootswatch.com/morph/)

:::
:::

Setiap tema punya tampilan berbeda, jadi kamu bisa pilih yang sesuai dengan gaya blog kamu ✨.

## 3.7 📡 RSS Feed untuk Blog

Blog biasanya menyertakan RSS Feed agar pembaca bisa mengikuti konten terbaru menggunakan feed reader 📬 atau aplikasi lainnya.

Untuk mengaktifkan RSS, kamu perlu melakukan dua langkah penting:

1. 1️⃣ Tambahkan `site-url` dan `description` di file `_quarto.yml` agar Quarto bisa menghasilkan feed 📄.

    ``` yaml
    website:
      title: "myblog"
      site-url: https://www.myblogexample.io
      description: "A great sample blog"
    ```

2. 2️⃣ Aktifkan opsi `feed: true` di halaman utama blog (`index.qmd`) agar feed otomatis dibuat ketika situs dirender 🔄.

    ``` yaml
    ---
    title: "myblog"
    listing:
      contents: posts
      sort: "date desc"
      type: default
      categories: true
      feed: true
    ---
    ```
    
Untuk belajar lebih lanjut tentang [RSS feed](https://quarto.org/docs/websites/website-listings.html#feeds).

::: callout-tip

💡 Menambahkan Tautan RSS di Navbar

Kalau kamu ingin pengunjung mudah berlangganan RSS feed blog kamu, kamu bisa menambahkan ikon RSS ke navigasi atas (navbar) 🧭.

``` yaml
website:
  title: "myblog"
  site-url: https://www.myblogexample.io
  description: "A great sample blog"
  navbar:
    right:
      - icon: rss
        href: index.xml
```
:::

### 📁 Feed Berdasarkan Kategori

Kamu juga bisa membuat RSS feed khusus untuk kategori tertentu dalam blogmu.

Misalnya, kalau kamu punya kategori `news` dan `posts`, kamu bisa menghasilkan feed seperti `index-news.xml` dan `index-posts.xml` secara otomatis 🗃️.

``` yaml
---
title: "myblog"
listing:
  contents: posts
  sort: "date desc"
  type: default
  categories: true
  feed:
    categories: [news, posts]
---
```

📂 Ini akan menghasilkan file `index.xml` berisi RSS feed utama untuk semua postingan, serta file `index-news.xml` dan `index-posts.xml` yang berisi RSS feed khusus untuk kategori `news` dan `posts` 📰📬.

## 3.8 🚀 Publikasi

Ada banyak cara untuk mempublikasikan blog Quarto kamu. Secara default, konten blog akan ditulis ke dalam sub-direktori `_site`. Proses publikasi hanyalah soal menyalin direktori ini ke server web atau layanan hosting yang kamu gunakan 🗂️➡️🌐.

Artikel [Publikasi Website](https://quarto.org/docs/publishing/) menjelaskan lebih detail cara mempublikasikan ke layanan berikut ini:

- [Quarto Pub 🌐](https://quarto.org/docs/publishing/quarto-pub.html)
- [GitHub Pages 🐙](https://quarto.org/docs/publishing/github-pages.html)
- [Netlify 🚦](https://quarto.org/docs/publishing/netlify.html)
- [Posit Connect 🔗](https://quarto.org/docs/publishing/rstudio-connect.html)
- [Firebase 🔥](https://quarto.org/docs/publishing/other.html#google-firebase)
- [Site44 🧱](https://quarto.org/docs/publishing/other.html#site44)
- [Amazon S3 ☁️](https://quarto.org/docs/publishing/other.html#amazon-s3)

## 3.9 📬 Langganan (Subscriptions)

Kamu bisa memberikan opsi kepada pembaca blog agar bisa berlangganan update via email ✉️📥. Untuk ini, kamu bisa menggunakan layanan email pihak ketiga untuk mengelola dan mengirimkan email langganan tersebut.

Biasanya, layanan email pihak ketiga ini akan menerima input dari RSS Feed kamu (misalnya: `https://www.myblogexample.io/index.xml`) dan memberi HTML widget langganan yang bisa kamu pasang di blog.

🧩 Tempat terbaik untuk meletakkan widget ini biasanya di margin kanan blog kamu.

Berikut langkah-langkah untuk menambahkan widget langganan:

1. Gunakan fitur dari layanan email kamu (seperti Mailchimp) untuk membuat HTML widget langganan 📄🔧.

    ```{.html filename="html"}
    <span style="font-weight: 600;">Subscribe</span>

    <!-- Awal dari Formulir Pendaftaran Mailchimp -->
    
    <link href="http://cdn-images.mailchimp.com/embedcode/slim-10_7_dtp.css" rel="stylesheet" type="text/css">
    <style type="text/css">
        #mc_embed_signup{background:#fff; clear:left; font:14px Helvetica,Arial,sans-serif;  width:170px;}
        /* Tambahkan penyesuaian gaya formulir Mailchimp milikmu sendiri dalam stylesheet situs atau di dalam blok <style> ini.
           Kami menyarankan untuk memindahkan blok ini dan link CSS sebelumnya ke bagian HEAD dari file HTML kamu. */
        #mc-embedded-subscribe-form{margin-left:-5px;}
    </style>
    
    <div id="mc_embed_signup">
    <form action="<site_url>" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate>
        <div id="mc_embed_signup_scroll">
    
        <input type="email" value="" name="EMAIL" class="email" id="mce-EMAIL" placeholder="email address" required>
        <!-- Orang sungguhan sebaiknya tidak mengisi bagian ini dan berharap hasil baik – jangan hapus bagian ini agar terhindar dari pendaftaran bot -->
        <div style="position: absolute; left: -5000px;" aria-hidden="true">
            <input type="text" name="b_f718424fc5df77c22533bdaa6_a3c37fb57b" tabindex="-1" value="">
        </div>
    
        <div class="optionalParent">
            <div class="clear foot" style="margin-top: 10px;">
                <input type="submit" value="Subscribe" name="subscribe" id="mc-embedded-subscribe" class="button">
                <p class="brandingLogo"></p>
            </div>
        </div>
    
        </div>
    </form>
    </div>
    
    <!-- Akhir dari Formulir Pendaftaran Mailchimp -->
    ```
    
    
::: {.callout-warning}
⚠️ HTML widget di atas **tidak akan langsung bekerja** di blog kamu karena HTML untuk langganan harus berisi informasi **yang spesifik untuk blog kamu** (seperti alamat situs dan pengaturan unik lainnya). Silakan ikuti panduan dari penyedia layanan email yang kamu gunakan untuk menghasilkan widget langganan yang sesuai.
:::

2. Buat file `subscribe.html` di root proyek kamu 📁.
3. Tempelkan kode HTML widget langganan ke dalam file `subscribe.html` dan simpan 💾.
4. Tambahkan `subscribe.html` ke bagian `margin-header` di file `_quarto.yml` seperti ini:

```yaml
website:
  # (metadata tambahan disembunyikan)
  margin-header: subscribe.html
```

![](https://quarto.org/docs/websites/images/myblog-subscribe.png){.border fig-alt="Gambar blog menunjukkan bagian Subscribe di sisi kanan halaman, dengan kolom input bertuliskan 'email address' dan tombol bertuliskan 'Subscribe'."}

# 4. 🦫 Draft Website
## 4.1 📝 Ikhtisar: Konsep Draf

Gunakan fitur *draft* (draf) untuk meninjau dan merencanakan konten sebelum benar-benar dipublikasikan. Secara default, halaman draf akan tampil kosong di situs yang dirender, dan tidak akan muncul di navigasi, daftar postingan, hasil pencarian, atau *sitemap* 🕵️‍️. Di bagian ini, kamu akan belajar cara menandai halaman sebagai draf, mengatur bagaimana draf ditampilkan di situs akhir, dan seperti apa tampilannya saat *preview* situs. Di halaman ini, kamu akan belajar cara:

- Menandai halaman sebagai draft
- Mengatur tampilan draft di situs yang dirender
- Meninjau draft melalui pratinjau situs

---

## 4.2 ✍️ Menandai Halaman Sebagai Draft

Untuk menandai halaman atau postingan sebagai *draft*, tambahkan `draft: true` pada YAML dokumen:

```yaml
---
title: "Postingan dengan Kode"
draft: true
---
```

Untuk menjadikan seluruh dokumen dalam suatu direktori sebagai draf, gunakan `draft: true` di [metadata direktori](https://quarto.org/docs/projects/quarto-projects.html#directory-metadata).

``` {.yaml filename="posts/_metadata.yml"}
draft: true
```

Sebagai alternatif, kamu bisa juga menentukan opsi `drafts` di bagian `website` dalam file `_quarto.yml`.

``` {.yaml filename="_quarto.yml"}
website:
  title: "Cool Website."
  drafts:
    - posts/post-with-code/index.qmd
```

Kalau kamu ingin menyimpan daftar path draf dalam file terpisah, gunakan fitur [**metadata include**](https://quarto.org/docs/projects/quarto-projects.html#metadata-includes). Misalnya, kamu bisa menulis daftar draf ke dalam `drafts.yml`.

``` {.yaml filename="drafts.yml"}
website:
  drafts:
    - posts/post-with-code/index.qmd
```

Lalu tambahkan file tersebut ke bagian `metadata-files` di `_quarto.yml`.

``` {.yaml filename="_quarto.yml"}
website:
  title: "Cool Website."

metadata-files:
  - drafts.yml
```

Opsi `drafts` di bagian `website` juga bisa dikonfigurasi lewat [**project profiles**](https://quarto.org/docs/projects/profiles.html).

## 4.3 🎨 Tampilan Halaman Draf
Kamu bisa menggunakan opsi `draft-mode` untuk mengatur apakah konten draf akan ditampilkan dan bisa diakses di situs akhir. Nilai yang tersedia untuk `draft-mode` adalah:

- `gone` (default) — Tidak ditampilkan dan tidak memiliki tautan ❌
- `unlinked` — Ditampilkan tapi tidak ditautkan 🔗🚫
- `visible` — Ditampilkan dan ditautkan 🌐✅

URL untuk halaman kosong tetap akan tersedia, tetapi isi halamannya akan kosong. Halaman draf yang dirender juga akan menampilkan spanduk *Draft* di atasnya.

![A rendered draft document will include a "Draft" banner](https://quarto.org/docs/websites/images/website-drafts-banner.png){.border fig-alt="Cuplikan layar dari sebuah postingan berjudul 'Post With Code', menampilkan spanduk bertuliskan 'Draft' di bagian atas halaman."}

Jika draf disetel sebagai *unlinked*, maka halaman tersebut tidak akan muncul di hasil pencarian, daftar, sitemap, maupun navigasi (seperti sidebar, navbar, atau footer). Kalau halaman lain menautkan ke draf ini, tautannya akan dihilangkan — hanya isi teks tautan yang ditampilkan tanpa hyperlink-nya.

Contoh konfigurasi lengkap seperti berikut:

:::{#lst-example}

```{.yaml filename="_quarto.yml"}
project:
  type: website

website:
  title: "Cool Website."
  navbar:
    left:
      - stuff/item1.qmd
      - stuff/item2.qmd
  drafts:                   # <1>
    - stuff/item2.qmd       # <1>
  draft-mode: unlinked      # <2>
```

1. Proyek menyediakan daftar halaman draf secara eksplisit. Hal yang sama bisa juga dilakukan dengan menambahkan `draft: true` langsung di halaman `stuff/item2.qmd`.

2. *Draft mode* disetel ke `unlinked`, artinya draf tetap dirender tetapi tidak ditautkan dari mana pun.

![](https://quarto.org/docs/websites/images/website-drafts-nav.png){.border fig-alt="Bilah navigasi untuk situs berjudul 'Cool Website.' hanya menampilkan satu item navigasi 'Item 1'."}
:::


Namun, `stuff/item2.qmd` masih bisa diakses lewat URL `stuff/item2.html` dan menampilkan spanduk Draft.

![](https://quarto.org/docs/websites/images/website-drafts-item2.png){.border fig-alt="Cuplikan layar dari halaman web berjudul 'Item 2'. Bilah navigasi hanya menampilkan 'Item 1'. Di atas navbar terdapat spanduk bertuliskan 'Draft'."}

## 4.4 🔍 Meninjau Halaman Draf

Terlepas dari nilai yang kamu atur di `draft-mode`, saat kamu menjalankan `quarto preview`, semua halaman draf akan diperlakukan sebagai `visible`. Artinya, halaman akan ditampilkan lengkap dengan spanduk Draft, dan semua tautan atau item navigasi menuju draf akan aktif dan terlihat.

Misalnya, saat *preview* dari situs yang dikonfigurasi di atas dijalankan, tautan ke `stuff/item2.html` akan muncul di navigasi.

![](https://quarto.org/docs/websites/images/website-drafts-preview.png){.border fig-alt="Cuplikan layar dari halaman web berjudul 'Item 2'. Bilah navigasi menampilkan dua item: 'Item 1' dan 'Item 2'. Di atas navbar terdapat spanduk bertuliskan 'Draft'."}

Perilaku ini juga berlaku untuk tombol **Render** di RStudio dan **Preview** di VS Code. 🧪💡

# 5. 🔍 Pencarian Website
## 5.1 📝 Ikhtisar Fitur Pencarian
Quarto mendukung pencarian teks penuh di dalam situs kamu. Secara default, Quarto akan membuat indeks lokal dari konten situs kamu supaya bisa dicari dengan mudah. Kalau kamu butuh solusi yang lebih canggih dan terhosting, kamu juga bisa menggunakan [Algolia](https://www.algolia.com/products/search-and-discovery/hosted-search-api/).

## 5.2📍 Penempatan Pencarian

Pencarian diaktifkan secara otomatis di website dan buku. Kalau situs kamu punya navbar, UI pencarian akan muncul di navbar. Kalau tidak, maka pencarian akan muncul di sidebar. Kamu bisa mengatur lokasi ini dengan opsi berikut:

| Opsi       | Deskripsi                                                                 |
|------------|---------------------------------------------------------------------------|
| `location` | Posisi pencarian: `navbar` atau `sidebar` (default-nya `navbar` jika ada)|
| `type`     | Jenis tampilan: `overlay` (pop-up) atau `textbox` (langsung di navbar)   |

Contohnya:

``` yaml
website:
  search: 
    location: navbar
    type: overlay
```

### 🔘 Opsi Lokasi:
- `navbar`: Pencarian muncul di bilah navigasi atas.
- `sidebar`: Pencarian muncul di bilah samping.

### 🖊️ Opsi Tampilan:
- `overlay`: Tombol yang membuka jendela pencarian pop-up.

![](https://quarto.org/docs/websites/images/navbar-overlay.png){.border .column-page-outset-right fig-alt="Halaman Quarto dengan overlay pencarian Algolia dalam mode 'terpisah'. Latar belakang halaman digelapkan dan dialog pencarian muncul dengan hasil pencarian di bawahnya."}

- `textbox`: Kotak input langsung di navbar/sidebar.

![](https://quarto.org/docs/websites/images/navbar-textbox.png){.border .column-page-outset-right fig-alt="Pencarian Algolia dengan textbox di navbar. Dialog pencarian muncul sebagai dropdown di sisi kanan layar."}

Secara default, textbox pencarian tidak memiliki teks placeholder. Kamu bisa menambahkan teks ini dengan opsi `search-text-placeholder` di bagian `language`.

::: {layout-ncol="2"}

``` yaml
language: 
  search-text-placeholder: Search
```

![](https://quarto.org/docs/websites/images/search-placeholder-text.png){fig-alt="Kotak pencarian menampilkan teks placeholder 'Search'."}
:::

⚠️ Catatan: Opsi ini adalah default, jadi tidak wajib ditulis kecuali ingin mengubahnya.

## 5.3 ⌨️ Pintasan Keyboard

Selain klik, pencarian juga bisa dibuka dengan pintasan keyboard:

- `s`
- `f`
- `/`

Kamu juga bisa mengganti pintasannya. Misalnya:

``` yaml
website:
  search:
    keyboard-shortcut: ["?", "H"]
```

Contoh:
Pencarian bisa dibuka dengan tombol `?` atau `H`.


## 5.4 🎨 Kustomisasi Hasil Pencarian

Kamu bisa mengatur bagaimana hasil pencarian ditampilkan dengan opsi berikut:

| Opsi                | Deskripsi                                                                                                                                                                                     |
|---------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `limit`             | Jumlah maksimal hasil pencarian yang ditampilkan (default: 20).                                                                                                                               |
| `collapse-after`    | Jumlah bagian hasil yang ditampilkan sebelum disembunyikan dalam link "more matches". (default: 2)                                                                                            |
|                     | ![](https://quarto.org/docs/websites/images/collapse-after.png){.border fig-alt="Sebagian hasil pencarian yang menampilkan teks '3 more matches in this document' di bawah hasil pencarian."} |
| `copy-button`       | Menambahkan ikon salin URL hasil pencarian ke clipboard. Berguna untuk berbagi pencarian tertentu.                                                                                            |
|                     | ![](https://quarto.org/docs/websites/images/copy-button.png){.border fig-alt="Kotak pencarian dengan ikon clipboard di sisi kanan."}                                                          |
| `show-item-context` | Menampilkan konteks halaman di hasil pencarian (contoh: `Panduan > Menulis > Gambar`)                                                                                                         |
|                     | ![](https://quarto.org/docs/websites/images/search-item-context.png){.border fig-alt="Kotak pencarian yang menampilkan konteks navigasi di atas judul hasil pencarian pertama." width="260"}  |


## 5.5 🌐 Menggunakan Algolia

Kalau kamu mau pakai sistem pencarian eksternal yang lebih kuat, Quarto bisa dikonfigurasi untuk menggunakan Algolia. Saat membuat situs, Quarto akan menghasilkan file `search.json` di folder output situs — ini bisa digunakan untuk memperbarui indeks Algolia. 📦 Untuk informasi lebih lanjut tentang membuat indeks dengan Algolia, lihat panduan [Mengirim dan Memperbarui Data Anda](https://www.algolia.com/doc/guides/sending-and-managing-data/send-and-update-your-data/) menggunakan Algolia.

### 🔧 Konfigurasi Dasar

Agar Quarto bisa tersambung dengan indeks Algolia-mu, kamu perlu menyertakan informasi berikut di file proyek `_quarto.yml`:

Contoh:

``` yaml
website:
  search:
    algolia:
      index-name: <my-index-name>
      application-id: <my-application-id>
      search-only-api-key: <my-search-only-api-key>
```

### 🛠️ Skema Indeks Khusus (Custom Index Schema)

Kalau kamu tidak menggunakan `search.json` default dari Quarto, kamu harus memberi tahu Quarto struktur data apa yang digunakan di indeks Algolia kamu.

You can enable this using:

🧩 Opsi Skema:
- `href`: URL dari hasil pencarian (wajib).
- `title`: Judul dari hasil pencarian (wajib).
- `text`: Teks konten (wajib).
- `section`: Bagian/subjudul dari dokumen (opsional).

Contoh: hasil pencarian dikelompokkan berdasarkan URL dan teks.

### 📊 Algolia Insights

Algolia otomatis menyediakan statistik performa pencarian. Kalau kamu ingin melacak klik dan konversi pengguna lebih lanjut, aktifkan opsi ini:

You can enable this using:

📍 Catatan:
Tracking menggunakan cookie anonim. Kalau situsmu pakai sistem izin cookie, maka tracking hanya aktif setelah pengguna menyetujui.

### ⚙️ Konfigurasi Lanjutan

Kamu juga bisa mengirim parameter khusus ke Algolia untuk membatasi hasil berdasarkan tag atau kategori tertentu.

You can enable this using:

Contoh:
Batasi hasil pencarian hanya untuk tag tertentu seperti `tag1` dan `tag2`.

📚 Dokumentasi lengkap: [Search API Parameters](https://www.algolia.com/doc/api-reference/search-api-parameters/)

## 5.6 🚫 Menonaktifkan atau Memaksa Pencarian

Untuk menonaktifkan pencarian di satu dokumen, tambahkan `search: false` di metadata YAML.

You can enable this using:

Kalau kamu ingin menonaktifkan pencarian untuk seluruh situs, tambahkan `website.search: false` di `_quarto.yml`

📌 Memaksa elemen tertentu ikut diindeks

Kalau ada bagian dari dokumen yang ingin kamu paksa masuk ke hasil pencarian, tambahkan kelas berikut:

```html
<div class="quarto-include-in-search-index">Konten penting ini akan selalu bisa dicari!</div>
```

Gunakan tag `<span>` atau `<div>` di sekeliling teks yang ingin dipastikan masuk indeks.